import {
  C,
  I,
  O,
  j
} from "./chunk-SCHFQOYA.js";
import {
  __commonJS,
  __toESM
} from "./chunk-HYZYPRER.js";

// node_modules/cssesc/cssesc.js
var require_cssesc = __commonJS({
  "node_modules/cssesc/cssesc.js"(exports, module) {
    "use strict";
    var object = {};
    var hasOwnProperty = object.hasOwnProperty;
    var merge = function merge2(options, defaults) {
      if (!options) {
        return defaults;
      }
      var result = {};
      for (var key in defaults) {
        result[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];
      }
      return result;
    };
    var regexAnySingleEscape = /[ -,\.\/:-@\[-\^`\{-~]/;
    var regexSingleEscape = /[ -,\.\/:-@\[\]\^`\{-~]/;
    var regexExcessiveSpaces = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g;
    var cssesc = function cssesc2(string, options) {
      options = merge(options, cssesc2.options);
      if (options.quotes != "single" && options.quotes != "double") {
        options.quotes = "single";
      }
      var quote = options.quotes == "double" ? '"' : "'";
      var isIdentifier = options.isIdentifier;
      var firstChar = string.charAt(0);
      var output = "";
      var counter = 0;
      var length = string.length;
      while (counter < length) {
        var character = string.charAt(counter++);
        var codePoint = character.charCodeAt();
        var value = void 0;
        if (codePoint < 32 || codePoint > 126) {
          if (codePoint >= 55296 && codePoint <= 56319 && counter < length) {
            var extra = string.charCodeAt(counter++);
            if ((extra & 64512) == 56320) {
              codePoint = ((codePoint & 1023) << 10) + (extra & 1023) + 65536;
            } else {
              counter--;
            }
          }
          value = "\\" + codePoint.toString(16).toUpperCase() + " ";
        } else {
          if (options.escapeEverything) {
            if (regexAnySingleEscape.test(character)) {
              value = "\\" + character;
            } else {
              value = "\\" + codePoint.toString(16).toUpperCase() + " ";
            }
          } else if (/[\t\n\f\r\x0B]/.test(character)) {
            value = "\\" + codePoint.toString(16).toUpperCase() + " ";
          } else if (character == "\\" || !isIdentifier && (character == '"' && quote == character || character == "'" && quote == character) || isIdentifier && regexSingleEscape.test(character)) {
            value = "\\" + character;
          } else {
            value = character;
          }
        }
        output += value;
      }
      if (isIdentifier) {
        if (/^-[-\d]/.test(output)) {
          output = "\\-" + output.slice(1);
        } else if (/\d/.test(firstChar)) {
          output = "\\3" + firstChar + " " + output.slice(1);
        }
      }
      output = output.replace(regexExcessiveSpaces, function($0, $1, $2) {
        if ($1 && $1.length % 2) {
          return $0;
        }
        return ($1 || "") + $2;
      });
      if (!isIdentifier && options.wrap) {
        return quote + output + quote;
      }
      return output;
    };
    cssesc.options = {
      "escapeEverything": false,
      "isIdentifier": false,
      "quotes": "single",
      "wrap": false
    };
    cssesc.version = "3.0.0";
    module.exports = cssesc;
  }
});

// node_modules/font-family-papandreou/index.js
var require_font_family_papandreou = __commonJS({
  "node_modules/font-family-papandreou/index.js"(exports, module) {
    var PLAIN = 0;
    var STRINGS = 1;
    var ESCAPING = 2;
    var IDENTIFIER = 3;
    var SEPARATING = 4;
    var SPACEAFTERIDENTIFIER = 5;
    var ESCAPINGIDENTIFIER = 6;
    var identifierPattern = /[a-z0-9_-]/i;
    var spacePattern = /[\s\t]/;
    var parse = function(str) {
      var starting = true;
      var state = PLAIN;
      var buffer = "";
      var i = 0;
      var quote;
      var c2;
      var names = [];
      while (true) {
        c2 = str[i];
        if (state === PLAIN) {
          if (!c2 && starting) {
            break;
          } else if (!c2 && !starting) {
            throw new Error("Parse error");
          } else if (c2 === '"' || c2 === "'") {
            quote = c2;
            state = STRINGS;
            starting = false;
          } else if (spacePattern.test(c2)) {
          } else if (identifierPattern.test(c2)) {
            state = IDENTIFIER;
            starting = false;
            i--;
          } else {
            throw new Error("Parse error");
          }
        } else if (state === STRINGS) {
          if (!c2) {
            throw new Error("Parse Error");
          } else if (c2 === "\\") {
            state = ESCAPING;
          } else if (c2 === quote) {
            names.push(buffer);
            buffer = "";
            state = SEPARATING;
          } else {
            buffer += c2;
          }
        } else if (state === ESCAPING) {
          if (c2 === quote || c2 === "\\") {
            buffer += c2;
            state = STRINGS;
          } else {
            throw new Error("Parse error");
          }
        } else if (state === IDENTIFIER) {
          if (!c2) {
            names.push(buffer);
            break;
          } else if (identifierPattern.test(c2)) {
            buffer += c2;
          } else if (c2 === ",") {
            names.push(buffer);
            buffer = "";
            state = PLAIN;
          } else if (spacePattern.test(c2)) {
            state = SPACEAFTERIDENTIFIER;
          } else if (c2 === "\\") {
            state = ESCAPINGIDENTIFIER;
          } else {
          }
        } else if (state === ESCAPINGIDENTIFIER) {
          if (/[0-9a-f]/i.test(c2)) {
            throw new Error("Parse error");
          } else {
            buffer += c2;
            state = IDENTIFIER;
          }
        } else if (state === SPACEAFTERIDENTIFIER) {
          if (!c2) {
            names.push(buffer);
            break;
          } else if (identifierPattern.test(c2)) {
            buffer += " " + c2;
            state = IDENTIFIER;
          } else if (c2 === ",") {
            names.push(buffer);
            buffer = "";
            state = PLAIN;
          } else if (spacePattern.test(c2)) {
          } else {
            throw new Error("Parse error");
          }
        } else if (state === SEPARATING) {
          if (!c2) {
            break;
          } else if (c2 === ",") {
            state = PLAIN;
          } else if (spacePattern.test(c2)) {
          } else {
            throw new Error("Parse error");
          }
        }
        i++;
      }
      return names;
    };
    var stringsPattern = /[^a-z0-9_-]/i;
    var stringify = function(names, options) {
      var quote = options && options.quote || '"';
      if (quote !== '"' && quote !== "'") {
        throw new Error("Quote must be `'` or `\"`");
      }
      var quotePattern = new RegExp(quote, "g");
      var safeNames = [];
      for (var i = 0; i < names.length; ++i) {
        var name = names[i];
        if (stringsPattern.test(name)) {
          name = name.replace(/\\/g, "\\\\").replace(quotePattern, "\\" + quote);
          name = quote + name + quote;
        }
        safeNames.push(name);
      }
      return safeNames.join(", ");
    };
    module.exports = {
      parse,
      stringify
    };
  }
});

// node_modules/svgpath/lib/path_parse.js
var require_path_parse = __commonJS({
  "node_modules/svgpath/lib/path_parse.js"(exports, module) {
    "use strict";
    var paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0 };
    var SPECIAL_SPACES = [
      5760,
      6158,
      8192,
      8193,
      8194,
      8195,
      8196,
      8197,
      8198,
      8199,
      8200,
      8201,
      8202,
      8239,
      8287,
      12288,
      65279
    ];
    function isSpace(ch) {
      return ch === 10 || ch === 13 || ch === 8232 || ch === 8233 || // Line terminators
      // White spaces
      ch === 32 || ch === 9 || ch === 11 || ch === 12 || ch === 160 || ch >= 5760 && SPECIAL_SPACES.indexOf(ch) >= 0;
    }
    function isCommand(code) {
      switch (code | 32) {
        case 109:
        case 122:
        case 108:
        case 104:
        case 118:
        case 99:
        case 115:
        case 113:
        case 116:
        case 97:
        case 114:
          return true;
      }
      return false;
    }
    function isArc(code) {
      return (code | 32) === 97;
    }
    function isDigit(code) {
      return code >= 48 && code <= 57;
    }
    function isDigitStart(code) {
      return code >= 48 && code <= 57 || /* 0..9 */
      code === 43 || /* + */
      code === 45 || /* - */
      code === 46;
    }
    function State(path) {
      this.index = 0;
      this.path = path;
      this.max = path.length;
      this.result = [];
      this.param = 0;
      this.err = "";
      this.segmentStart = 0;
      this.data = [];
    }
    function skipSpaces(state) {
      while (state.index < state.max && isSpace(state.path.charCodeAt(state.index))) {
        state.index++;
      }
    }
    function scanFlag(state) {
      var ch = state.path.charCodeAt(state.index);
      if (ch === 48) {
        state.param = 0;
        state.index++;
        return;
      }
      if (ch === 49) {
        state.param = 1;
        state.index++;
        return;
      }
      state.err = "SvgPath: arc flag can be 0 or 1 only (at pos " + state.index + ")";
    }
    function scanParam(state) {
      var start = state.index, index = start, max = state.max, zeroFirst = false, hasCeiling = false, hasDecimal = false, hasDot = false, ch;
      if (index >= max) {
        state.err = "SvgPath: missed param (at pos " + index + ")";
        return;
      }
      ch = state.path.charCodeAt(index);
      if (ch === 43 || ch === 45) {
        index++;
        ch = index < max ? state.path.charCodeAt(index) : 0;
      }
      if (!isDigit(ch) && ch !== 46) {
        state.err = "SvgPath: param should start with 0..9 or `.` (at pos " + index + ")";
        return;
      }
      if (ch !== 46) {
        zeroFirst = ch === 48;
        index++;
        ch = index < max ? state.path.charCodeAt(index) : 0;
        if (zeroFirst && index < max) {
          if (ch && isDigit(ch)) {
            state.err = "SvgPath: numbers started with `0` such as `09` are illegal (at pos " + start + ")";
            return;
          }
        }
        while (index < max && isDigit(state.path.charCodeAt(index))) {
          index++;
          hasCeiling = true;
        }
        ch = index < max ? state.path.charCodeAt(index) : 0;
      }
      if (ch === 46) {
        hasDot = true;
        index++;
        while (isDigit(state.path.charCodeAt(index))) {
          index++;
          hasDecimal = true;
        }
        ch = index < max ? state.path.charCodeAt(index) : 0;
      }
      if (ch === 101 || ch === 69) {
        if (hasDot && !hasCeiling && !hasDecimal) {
          state.err = "SvgPath: invalid float exponent (at pos " + index + ")";
          return;
        }
        index++;
        ch = index < max ? state.path.charCodeAt(index) : 0;
        if (ch === 43 || ch === 45) {
          index++;
        }
        if (index < max && isDigit(state.path.charCodeAt(index))) {
          while (index < max && isDigit(state.path.charCodeAt(index))) {
            index++;
          }
        } else {
          state.err = "SvgPath: invalid float exponent (at pos " + index + ")";
          return;
        }
      }
      state.index = index;
      state.param = parseFloat(state.path.slice(start, index)) + 0;
    }
    function finalizeSegment(state) {
      var cmd, cmdLC;
      cmd = state.path[state.segmentStart];
      cmdLC = cmd.toLowerCase();
      var params = state.data;
      if (cmdLC === "m" && params.length > 2) {
        state.result.push([cmd, params[0], params[1]]);
        params = params.slice(2);
        cmdLC = "l";
        cmd = cmd === "m" ? "l" : "L";
      }
      if (cmdLC === "r") {
        state.result.push([cmd].concat(params));
      } else {
        while (params.length >= paramCounts[cmdLC]) {
          state.result.push([cmd].concat(params.splice(0, paramCounts[cmdLC])));
          if (!paramCounts[cmdLC]) {
            break;
          }
        }
      }
    }
    function scanSegment(state) {
      var max = state.max, cmdCode, is_arc, comma_found, need_params, i;
      state.segmentStart = state.index;
      cmdCode = state.path.charCodeAt(state.index);
      is_arc = isArc(cmdCode);
      if (!isCommand(cmdCode)) {
        state.err = "SvgPath: bad command " + state.path[state.index] + " (at pos " + state.index + ")";
        return;
      }
      need_params = paramCounts[state.path[state.index].toLowerCase()];
      state.index++;
      skipSpaces(state);
      state.data = [];
      if (!need_params) {
        finalizeSegment(state);
        return;
      }
      comma_found = false;
      for (; ; ) {
        for (i = need_params; i > 0; i--) {
          if (is_arc && (i === 3 || i === 4))
            scanFlag(state);
          else
            scanParam(state);
          if (state.err.length) {
            finalizeSegment(state);
            return;
          }
          state.data.push(state.param);
          skipSpaces(state);
          comma_found = false;
          if (state.index < max && state.path.charCodeAt(state.index) === 44) {
            state.index++;
            skipSpaces(state);
            comma_found = true;
          }
        }
        if (comma_found) {
          continue;
        }
        if (state.index >= state.max) {
          break;
        }
        if (!isDigitStart(state.path.charCodeAt(state.index))) {
          break;
        }
      }
      finalizeSegment(state);
    }
    module.exports = function pathParse(svgPath) {
      var state = new State(svgPath);
      var max = state.max;
      skipSpaces(state);
      while (state.index < max && !state.err.length) {
        scanSegment(state);
      }
      if (state.result.length) {
        if ("mM".indexOf(state.result[0][0]) < 0) {
          state.err = "SvgPath: string should start with `M` or `m`";
          state.result = [];
        } else {
          state.result[0][0] = "M";
        }
      }
      return {
        err: state.err,
        segments: state.result
      };
    };
  }
});

// node_modules/svgpath/lib/matrix.js
var require_matrix = __commonJS({
  "node_modules/svgpath/lib/matrix.js"(exports, module) {
    "use strict";
    function combine(m1, m2) {
      return [
        m1[0] * m2[0] + m1[2] * m2[1],
        m1[1] * m2[0] + m1[3] * m2[1],
        m1[0] * m2[2] + m1[2] * m2[3],
        m1[1] * m2[2] + m1[3] * m2[3],
        m1[0] * m2[4] + m1[2] * m2[5] + m1[4],
        m1[1] * m2[4] + m1[3] * m2[5] + m1[5]
      ];
    }
    function Matrix() {
      if (!(this instanceof Matrix)) {
        return new Matrix();
      }
      this.queue = [];
      this.cache = null;
    }
    Matrix.prototype.matrix = function(m2) {
      if (m2[0] === 1 && m2[1] === 0 && m2[2] === 0 && m2[3] === 1 && m2[4] === 0 && m2[5] === 0) {
        return this;
      }
      this.cache = null;
      this.queue.push(m2);
      return this;
    };
    Matrix.prototype.translate = function(tx, ty) {
      if (tx !== 0 || ty !== 0) {
        this.cache = null;
        this.queue.push([1, 0, 0, 1, tx, ty]);
      }
      return this;
    };
    Matrix.prototype.scale = function(sx, sy) {
      if (sx !== 1 || sy !== 1) {
        this.cache = null;
        this.queue.push([sx, 0, 0, sy, 0, 0]);
      }
      return this;
    };
    Matrix.prototype.rotate = function(angle, rx, ry) {
      var rad, cos, sin;
      if (angle !== 0) {
        this.translate(rx, ry);
        rad = angle * Math.PI / 180;
        cos = Math.cos(rad);
        sin = Math.sin(rad);
        this.queue.push([cos, sin, -sin, cos, 0, 0]);
        this.cache = null;
        this.translate(-rx, -ry);
      }
      return this;
    };
    Matrix.prototype.skewX = function(angle) {
      if (angle !== 0) {
        this.cache = null;
        this.queue.push([1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0]);
      }
      return this;
    };
    Matrix.prototype.skewY = function(angle) {
      if (angle !== 0) {
        this.cache = null;
        this.queue.push([1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0]);
      }
      return this;
    };
    Matrix.prototype.toArray = function() {
      if (this.cache) {
        return this.cache;
      }
      if (!this.queue.length) {
        this.cache = [1, 0, 0, 1, 0, 0];
        return this.cache;
      }
      this.cache = this.queue[0];
      if (this.queue.length === 1) {
        return this.cache;
      }
      for (var i = 1; i < this.queue.length; i++) {
        this.cache = combine(this.cache, this.queue[i]);
      }
      return this.cache;
    };
    Matrix.prototype.calc = function(x2, y2, isRelative) {
      var m2;
      if (!this.queue.length) {
        return [x2, y2];
      }
      if (!this.cache) {
        this.cache = this.toArray();
      }
      m2 = this.cache;
      return [
        x2 * m2[0] + y2 * m2[2] + (isRelative ? 0 : m2[4]),
        x2 * m2[1] + y2 * m2[3] + (isRelative ? 0 : m2[5])
      ];
    };
    module.exports = Matrix;
  }
});

// node_modules/svgpath/lib/transform_parse.js
var require_transform_parse = __commonJS({
  "node_modules/svgpath/lib/transform_parse.js"(exports, module) {
    "use strict";
    var Matrix = require_matrix();
    var operations = {
      matrix: true,
      scale: true,
      rotate: true,
      translate: true,
      skewX: true,
      skewY: true
    };
    var CMD_SPLIT_RE = /\s*(matrix|translate|scale|rotate|skewX|skewY)\s*\(\s*(.+?)\s*\)[\s,]*/;
    var PARAMS_SPLIT_RE = /[\s,]+/;
    module.exports = function transformParse(transformString) {
      var matrix = new Matrix();
      var cmd, params;
      transformString.split(CMD_SPLIT_RE).forEach(function(item) {
        if (!item.length) {
          return;
        }
        if (typeof operations[item] !== "undefined") {
          cmd = item;
          return;
        }
        params = item.split(PARAMS_SPLIT_RE).map(function(i) {
          return +i || 0;
        });
        switch (cmd) {
          case "matrix":
            if (params.length === 6) {
              matrix.matrix(params);
            }
            return;
          case "scale":
            if (params.length === 1) {
              matrix.scale(params[0], params[0]);
            } else if (params.length === 2) {
              matrix.scale(params[0], params[1]);
            }
            return;
          case "rotate":
            if (params.length === 1) {
              matrix.rotate(params[0], 0, 0);
            } else if (params.length === 3) {
              matrix.rotate(params[0], params[1], params[2]);
            }
            return;
          case "translate":
            if (params.length === 1) {
              matrix.translate(params[0], 0);
            } else if (params.length === 2) {
              matrix.translate(params[0], params[1]);
            }
            return;
          case "skewX":
            if (params.length === 1) {
              matrix.skewX(params[0]);
            }
            return;
          case "skewY":
            if (params.length === 1) {
              matrix.skewY(params[0]);
            }
            return;
        }
      });
      return matrix;
    };
  }
});

// node_modules/svgpath/lib/a2c.js
var require_a2c = __commonJS({
  "node_modules/svgpath/lib/a2c.js"(exports, module) {
    "use strict";
    var TAU = Math.PI * 2;
    function unit_vector_angle(ux, uy, vx, vy) {
      var sign = ux * vy - uy * vx < 0 ? -1 : 1;
      var dot = ux * vx + uy * vy;
      if (dot > 1) {
        dot = 1;
      }
      if (dot < -1) {
        dot = -1;
      }
      return sign * Math.acos(dot);
    }
    function get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_phi, cos_phi) {
      var x1p = cos_phi * (x1 - x2) / 2 + sin_phi * (y1 - y2) / 2;
      var y1p = -sin_phi * (x1 - x2) / 2 + cos_phi * (y1 - y2) / 2;
      var rx_sq = rx * rx;
      var ry_sq = ry * ry;
      var x1p_sq = x1p * x1p;
      var y1p_sq = y1p * y1p;
      var radicant = rx_sq * ry_sq - rx_sq * y1p_sq - ry_sq * x1p_sq;
      if (radicant < 0) {
        radicant = 0;
      }
      radicant /= rx_sq * y1p_sq + ry_sq * x1p_sq;
      radicant = Math.sqrt(radicant) * (fa === fs ? -1 : 1);
      var cxp = radicant * rx / ry * y1p;
      var cyp = radicant * -ry / rx * x1p;
      var cx = cos_phi * cxp - sin_phi * cyp + (x1 + x2) / 2;
      var cy = sin_phi * cxp + cos_phi * cyp + (y1 + y2) / 2;
      var v1x = (x1p - cxp) / rx;
      var v1y = (y1p - cyp) / ry;
      var v2x = (-x1p - cxp) / rx;
      var v2y = (-y1p - cyp) / ry;
      var theta1 = unit_vector_angle(1, 0, v1x, v1y);
      var delta_theta = unit_vector_angle(v1x, v1y, v2x, v2y);
      if (fs === 0 && delta_theta > 0) {
        delta_theta -= TAU;
      }
      if (fs === 1 && delta_theta < 0) {
        delta_theta += TAU;
      }
      return [cx, cy, theta1, delta_theta];
    }
    function approximate_unit_arc(theta1, delta_theta) {
      var alpha = 4 / 3 * Math.tan(delta_theta / 4);
      var x1 = Math.cos(theta1);
      var y1 = Math.sin(theta1);
      var x2 = Math.cos(theta1 + delta_theta);
      var y2 = Math.sin(theta1 + delta_theta);
      return [x1, y1, x1 - y1 * alpha, y1 + x1 * alpha, x2 + y2 * alpha, y2 - x2 * alpha, x2, y2];
    }
    module.exports = function a2c(x1, y1, x2, y2, fa, fs, rx, ry, phi) {
      var sin_phi = Math.sin(phi * TAU / 360);
      var cos_phi = Math.cos(phi * TAU / 360);
      var x1p = cos_phi * (x1 - x2) / 2 + sin_phi * (y1 - y2) / 2;
      var y1p = -sin_phi * (x1 - x2) / 2 + cos_phi * (y1 - y2) / 2;
      if (x1p === 0 && y1p === 0) {
        return [];
      }
      if (rx === 0 || ry === 0) {
        return [];
      }
      rx = Math.abs(rx);
      ry = Math.abs(ry);
      var lambda = x1p * x1p / (rx * rx) + y1p * y1p / (ry * ry);
      if (lambda > 1) {
        rx *= Math.sqrt(lambda);
        ry *= Math.sqrt(lambda);
      }
      var cc = get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_phi, cos_phi);
      var result = [];
      var theta1 = cc[2];
      var delta_theta = cc[3];
      var segments = Math.max(Math.ceil(Math.abs(delta_theta) / (TAU / 4)), 1);
      delta_theta /= segments;
      for (var i = 0; i < segments; i++) {
        result.push(approximate_unit_arc(theta1, delta_theta));
        theta1 += delta_theta;
      }
      return result.map(function(curve) {
        for (var i2 = 0; i2 < curve.length; i2 += 2) {
          var x3 = curve[i2 + 0];
          var y3 = curve[i2 + 1];
          x3 *= rx;
          y3 *= ry;
          var xp = cos_phi * x3 - sin_phi * y3;
          var yp = sin_phi * x3 + cos_phi * y3;
          curve[i2 + 0] = xp + cc[0];
          curve[i2 + 1] = yp + cc[1];
        }
        return curve;
      });
    };
  }
});

// node_modules/svgpath/lib/ellipse.js
var require_ellipse = __commonJS({
  "node_modules/svgpath/lib/ellipse.js"(exports, module) {
    "use strict";
    var epsilon = 1e-10;
    var torad = Math.PI / 180;
    function Ellipse(rx, ry, ax) {
      if (!(this instanceof Ellipse)) {
        return new Ellipse(rx, ry, ax);
      }
      this.rx = rx;
      this.ry = ry;
      this.ax = ax;
    }
    Ellipse.prototype.transform = function(m2) {
      var c2 = Math.cos(this.ax * torad), s2 = Math.sin(this.ax * torad);
      var ma = [
        this.rx * (m2[0] * c2 + m2[2] * s2),
        this.rx * (m2[1] * c2 + m2[3] * s2),
        this.ry * (-m2[0] * s2 + m2[2] * c2),
        this.ry * (-m2[1] * s2 + m2[3] * c2)
      ];
      var J2 = ma[0] * ma[0] + ma[2] * ma[2], K2 = ma[1] * ma[1] + ma[3] * ma[3];
      var D2 = ((ma[0] - ma[3]) * (ma[0] - ma[3]) + (ma[2] + ma[1]) * (ma[2] + ma[1])) * ((ma[0] + ma[3]) * (ma[0] + ma[3]) + (ma[2] - ma[1]) * (ma[2] - ma[1]));
      var JK = (J2 + K2) / 2;
      if (D2 < epsilon * JK) {
        this.rx = this.ry = Math.sqrt(JK);
        this.ax = 0;
        return this;
      }
      var L2 = ma[0] * ma[1] + ma[2] * ma[3];
      D2 = Math.sqrt(D2);
      var l1 = JK + D2 / 2, l2 = JK - D2 / 2;
      this.ax = Math.abs(L2) < epsilon && Math.abs(l1 - K2) < epsilon ? 90 : Math.atan(
        Math.abs(L2) > Math.abs(l1 - K2) ? (l1 - J2) / L2 : L2 / (l1 - K2)
      ) * 180 / Math.PI;
      if (this.ax >= 0) {
        this.rx = Math.sqrt(l1);
        this.ry = Math.sqrt(l2);
      } else {
        this.ax += 90;
        this.rx = Math.sqrt(l2);
        this.ry = Math.sqrt(l1);
      }
      return this;
    };
    Ellipse.prototype.isDegenerate = function() {
      return this.rx < epsilon * this.ry || this.ry < epsilon * this.rx;
    };
    module.exports = Ellipse;
  }
});

// node_modules/svgpath/lib/svgpath.js
var require_svgpath = __commonJS({
  "node_modules/svgpath/lib/svgpath.js"(exports, module) {
    "use strict";
    var pathParse = require_path_parse();
    var transformParse = require_transform_parse();
    var matrix = require_matrix();
    var a2c = require_a2c();
    var ellipse = require_ellipse();
    function SvgPath(path) {
      if (!(this instanceof SvgPath)) {
        return new SvgPath(path);
      }
      var pstate = pathParse(path);
      this.segments = pstate.segments;
      this.err = pstate.err;
      this.__stack = [];
    }
    SvgPath.from = function(src) {
      if (typeof src === "string")
        return new SvgPath(src);
      if (src instanceof SvgPath) {
        var s2 = new SvgPath("");
        s2.err = src.err;
        s2.segments = src.segments.map(function(sgm) {
          return sgm.slice();
        });
        s2.__stack = src.__stack.map(function(m2) {
          return matrix().matrix(m2.toArray());
        });
        return s2;
      }
      throw new Error("SvgPath.from: invalid param type " + src);
    };
    SvgPath.prototype.__matrix = function(m2) {
      var self = this, i;
      if (!m2.queue.length) {
        return;
      }
      this.iterate(function(s2, index, x2, y2) {
        var p2, result, name, isRelative;
        switch (s2[0]) {
          case "v":
            p2 = m2.calc(0, s2[1], true);
            result = p2[0] === 0 ? ["v", p2[1]] : ["l", p2[0], p2[1]];
            break;
          case "V":
            p2 = m2.calc(x2, s2[1], false);
            result = p2[0] === m2.calc(x2, y2, false)[0] ? ["V", p2[1]] : ["L", p2[0], p2[1]];
            break;
          case "h":
            p2 = m2.calc(s2[1], 0, true);
            result = p2[1] === 0 ? ["h", p2[0]] : ["l", p2[0], p2[1]];
            break;
          case "H":
            p2 = m2.calc(s2[1], y2, false);
            result = p2[1] === m2.calc(x2, y2, false)[1] ? ["H", p2[0]] : ["L", p2[0], p2[1]];
            break;
          case "a":
          case "A":
            var ma = m2.toArray();
            var e2 = ellipse(s2[1], s2[2], s2[3]).transform(ma);
            if (ma[0] * ma[3] - ma[1] * ma[2] < 0) {
              s2[5] = s2[5] ? "0" : "1";
            }
            p2 = m2.calc(s2[6], s2[7], s2[0] === "a");
            if (s2[0] === "A" && s2[6] === x2 && s2[7] === y2 || s2[0] === "a" && s2[6] === 0 && s2[7] === 0) {
              result = [s2[0] === "a" ? "l" : "L", p2[0], p2[1]];
              break;
            }
            if (e2.isDegenerate()) {
              result = [s2[0] === "a" ? "l" : "L", p2[0], p2[1]];
            } else {
              result = [s2[0], e2.rx, e2.ry, e2.ax, s2[4], s2[5], p2[0], p2[1]];
            }
            break;
          case "m":
            isRelative = index > 0;
            p2 = m2.calc(s2[1], s2[2], isRelative);
            result = ["m", p2[0], p2[1]];
            break;
          default:
            name = s2[0];
            result = [name];
            isRelative = name.toLowerCase() === name;
            for (i = 1; i < s2.length; i += 2) {
              p2 = m2.calc(s2[i], s2[i + 1], isRelative);
              result.push(p2[0], p2[1]);
            }
        }
        self.segments[index] = result;
      }, true);
    };
    SvgPath.prototype.__evaluateStack = function() {
      var m2, i;
      if (!this.__stack.length) {
        return;
      }
      if (this.__stack.length === 1) {
        this.__matrix(this.__stack[0]);
        this.__stack = [];
        return;
      }
      m2 = matrix();
      i = this.__stack.length;
      while (--i >= 0) {
        m2.matrix(this.__stack[i].toArray());
      }
      this.__matrix(m2);
      this.__stack = [];
    };
    SvgPath.prototype.toString = function() {
      var result = "", prevCmd = "", cmdSkipped = false;
      this.__evaluateStack();
      for (var i = 0, len = this.segments.length; i < len; i++) {
        var segment = this.segments[i];
        var cmd = segment[0];
        if (cmd !== prevCmd || cmd === "m" || cmd === "M") {
          if (cmd === "m" && prevCmd === "z")
            result += " ";
          result += cmd;
          cmdSkipped = false;
        } else {
          cmdSkipped = true;
        }
        for (var pos = 1; pos < segment.length; pos++) {
          var val = segment[pos];
          if (pos === 1) {
            if (cmdSkipped && val >= 0)
              result += " ";
          } else if (val >= 0)
            result += " ";
          result += val;
        }
        prevCmd = cmd;
      }
      return result;
    };
    SvgPath.prototype.translate = function(x2, y2) {
      this.__stack.push(matrix().translate(x2, y2 || 0));
      return this;
    };
    SvgPath.prototype.scale = function(sx, sy) {
      this.__stack.push(matrix().scale(sx, !sy && sy !== 0 ? sx : sy));
      return this;
    };
    SvgPath.prototype.rotate = function(angle, rx, ry) {
      this.__stack.push(matrix().rotate(angle, rx || 0, ry || 0));
      return this;
    };
    SvgPath.prototype.skewX = function(degrees) {
      this.__stack.push(matrix().skewX(degrees));
      return this;
    };
    SvgPath.prototype.skewY = function(degrees) {
      this.__stack.push(matrix().skewY(degrees));
      return this;
    };
    SvgPath.prototype.matrix = function(m2) {
      this.__stack.push(matrix().matrix(m2));
      return this;
    };
    SvgPath.prototype.transform = function(transformString) {
      if (!transformString.trim()) {
        return this;
      }
      this.__stack.push(transformParse(transformString));
      return this;
    };
    SvgPath.prototype.round = function(d2) {
      var contourStartDeltaX = 0, contourStartDeltaY = 0, deltaX = 0, deltaY = 0, l2;
      d2 = d2 || 0;
      this.__evaluateStack();
      this.segments.forEach(function(s2) {
        var isRelative = s2[0].toLowerCase() === s2[0];
        switch (s2[0]) {
          case "H":
          case "h":
            if (isRelative) {
              s2[1] += deltaX;
            }
            deltaX = s2[1] - s2[1].toFixed(d2);
            s2[1] = +s2[1].toFixed(d2);
            return;
          case "V":
          case "v":
            if (isRelative) {
              s2[1] += deltaY;
            }
            deltaY = s2[1] - s2[1].toFixed(d2);
            s2[1] = +s2[1].toFixed(d2);
            return;
          case "Z":
          case "z":
            deltaX = contourStartDeltaX;
            deltaY = contourStartDeltaY;
            return;
          case "M":
          case "m":
            if (isRelative) {
              s2[1] += deltaX;
              s2[2] += deltaY;
            }
            deltaX = s2[1] - s2[1].toFixed(d2);
            deltaY = s2[2] - s2[2].toFixed(d2);
            contourStartDeltaX = deltaX;
            contourStartDeltaY = deltaY;
            s2[1] = +s2[1].toFixed(d2);
            s2[2] = +s2[2].toFixed(d2);
            return;
          case "A":
          case "a":
            if (isRelative) {
              s2[6] += deltaX;
              s2[7] += deltaY;
            }
            deltaX = s2[6] - s2[6].toFixed(d2);
            deltaY = s2[7] - s2[7].toFixed(d2);
            s2[1] = +s2[1].toFixed(d2);
            s2[2] = +s2[2].toFixed(d2);
            s2[3] = +s2[3].toFixed(d2 + 2);
            s2[6] = +s2[6].toFixed(d2);
            s2[7] = +s2[7].toFixed(d2);
            return;
          default:
            l2 = s2.length;
            if (isRelative) {
              s2[l2 - 2] += deltaX;
              s2[l2 - 1] += deltaY;
            }
            deltaX = s2[l2 - 2] - s2[l2 - 2].toFixed(d2);
            deltaY = s2[l2 - 1] - s2[l2 - 1].toFixed(d2);
            s2.forEach(function(val, i) {
              if (!i) {
                return;
              }
              s2[i] = +s2[i].toFixed(d2);
            });
            return;
        }
      });
      return this;
    };
    SvgPath.prototype.iterate = function(iterator, keepLazyStack) {
      var segments = this.segments, replacements = {}, needReplace = false, lastX = 0, lastY = 0, countourStartX = 0, countourStartY = 0;
      var i, j3, newSegments;
      if (!keepLazyStack) {
        this.__evaluateStack();
      }
      segments.forEach(function(s2, index) {
        var res = iterator(s2, index, lastX, lastY);
        if (Array.isArray(res)) {
          replacements[index] = res;
          needReplace = true;
        }
        var isRelative = s2[0] === s2[0].toLowerCase();
        switch (s2[0]) {
          case "m":
          case "M":
            lastX = s2[1] + (isRelative ? lastX : 0);
            lastY = s2[2] + (isRelative ? lastY : 0);
            countourStartX = lastX;
            countourStartY = lastY;
            return;
          case "h":
          case "H":
            lastX = s2[1] + (isRelative ? lastX : 0);
            return;
          case "v":
          case "V":
            lastY = s2[1] + (isRelative ? lastY : 0);
            return;
          case "z":
          case "Z":
            lastX = countourStartX;
            lastY = countourStartY;
            return;
          default:
            lastX = s2[s2.length - 2] + (isRelative ? lastX : 0);
            lastY = s2[s2.length - 1] + (isRelative ? lastY : 0);
        }
      });
      if (!needReplace) {
        return this;
      }
      newSegments = [];
      for (i = 0; i < segments.length; i++) {
        if (typeof replacements[i] !== "undefined") {
          for (j3 = 0; j3 < replacements[i].length; j3++) {
            newSegments.push(replacements[i][j3]);
          }
        } else {
          newSegments.push(segments[i]);
        }
      }
      this.segments = newSegments;
      return this;
    };
    SvgPath.prototype.abs = function() {
      this.iterate(function(s2, index, x2, y2) {
        var name = s2[0], nameUC = name.toUpperCase(), i;
        if (name === nameUC) {
          return;
        }
        s2[0] = nameUC;
        switch (name) {
          case "v":
            s2[1] += y2;
            return;
          case "a":
            s2[6] += x2;
            s2[7] += y2;
            return;
          default:
            for (i = 1; i < s2.length; i++) {
              s2[i] += i % 2 ? x2 : y2;
            }
        }
      }, true);
      return this;
    };
    SvgPath.prototype.rel = function() {
      this.iterate(function(s2, index, x2, y2) {
        var name = s2[0], nameLC = name.toLowerCase(), i;
        if (name === nameLC) {
          return;
        }
        if (index === 0 && name === "M") {
          return;
        }
        s2[0] = nameLC;
        switch (name) {
          case "V":
            s2[1] -= y2;
            return;
          case "A":
            s2[6] -= x2;
            s2[7] -= y2;
            return;
          default:
            for (i = 1; i < s2.length; i++) {
              s2[i] -= i % 2 ? x2 : y2;
            }
        }
      }, true);
      return this;
    };
    SvgPath.prototype.unarc = function() {
      this.iterate(function(s2, index, x2, y2) {
        var new_segments, nextX, nextY, result = [], name = s2[0];
        if (name !== "A" && name !== "a") {
          return null;
        }
        if (name === "a") {
          nextX = x2 + s2[6];
          nextY = y2 + s2[7];
        } else {
          nextX = s2[6];
          nextY = s2[7];
        }
        new_segments = a2c(x2, y2, nextX, nextY, s2[4], s2[5], s2[1], s2[2], s2[3]);
        if (new_segments.length === 0) {
          return [[s2[0] === "a" ? "l" : "L", s2[6], s2[7]]];
        }
        new_segments.forEach(function(s3) {
          result.push(["C", s3[2], s3[3], s3[4], s3[5], s3[6], s3[7]]);
        });
        return result;
      });
      return this;
    };
    SvgPath.prototype.unshort = function() {
      var segments = this.segments;
      var prevControlX, prevControlY, prevSegment;
      var curControlX, curControlY;
      this.iterate(function(s2, idx, x2, y2) {
        var name = s2[0], nameUC = name.toUpperCase(), isRelative;
        if (!idx) {
          return;
        }
        if (nameUC === "T") {
          isRelative = name === "t";
          prevSegment = segments[idx - 1];
          if (prevSegment[0] === "Q") {
            prevControlX = prevSegment[1] - x2;
            prevControlY = prevSegment[2] - y2;
          } else if (prevSegment[0] === "q") {
            prevControlX = prevSegment[1] - prevSegment[3];
            prevControlY = prevSegment[2] - prevSegment[4];
          } else {
            prevControlX = 0;
            prevControlY = 0;
          }
          curControlX = -prevControlX;
          curControlY = -prevControlY;
          if (!isRelative) {
            curControlX += x2;
            curControlY += y2;
          }
          segments[idx] = [
            isRelative ? "q" : "Q",
            curControlX,
            curControlY,
            s2[1],
            s2[2]
          ];
        } else if (nameUC === "S") {
          isRelative = name === "s";
          prevSegment = segments[idx - 1];
          if (prevSegment[0] === "C") {
            prevControlX = prevSegment[3] - x2;
            prevControlY = prevSegment[4] - y2;
          } else if (prevSegment[0] === "c") {
            prevControlX = prevSegment[3] - prevSegment[5];
            prevControlY = prevSegment[4] - prevSegment[6];
          } else {
            prevControlX = 0;
            prevControlY = 0;
          }
          curControlX = -prevControlX;
          curControlY = -prevControlY;
          if (!isRelative) {
            curControlX += x2;
            curControlY += y2;
          }
          segments[idx] = [
            isRelative ? "c" : "C",
            curControlX,
            curControlY,
            s2[1],
            s2[2],
            s2[3],
            s2[4]
          ];
        }
      });
      return this;
    };
    module.exports = SvgPath;
  }
});

// node_modules/svgpath/index.js
var require_svgpath2 = __commonJS({
  "node_modules/svgpath/index.js"(exports, module) {
    "use strict";
    module.exports = require_svgpath();
  }
});

// node_modules/svg2pdf.js/dist/svg2pdf.es.min.js
var import_cssesc = __toESM(require_cssesc());
var import_font_family_papandreou = __toESM(require_font_family_papandreou());
var import_svgpath = __toESM(require_svgpath2());

// node_modules/specificity/dist/specificity.mjs
var calculateSingle = function(input) {
  var selector = input, findMatch, typeCount = {
    "a": 0,
    "b": 0,
    "c": 0
  }, parts = [], attributeRegex = /(\[[^\]]+\])/g, idRegex = /(#[^\#\s\+>~\.\[:\)]+)/g, classRegex = /(\.[^\s\+>~\.\[:\)]+)/g, pseudoElementRegex = /(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi, pseudoClassWithBracketsRegex = /(:(?!not|global|local)[\w-]+\([^\)]*\))/gi, pseudoClassRegex = /(:(?!not|global|local)[^\s\+>~\.\[:]+)/g, elementRegex = /([^\s\+>~\.\[:]+)/g;
  findMatch = function(regex, type) {
    var matches, i, len, match, index, length;
    if (regex.test(selector)) {
      matches = selector.match(regex);
      for (i = 0, len = matches.length; i < len; i += 1) {
        typeCount[type] += 1;
        match = matches[i];
        index = selector.indexOf(match);
        length = match.length;
        parts.push({
          selector: input.substr(index, length),
          type,
          index,
          length
        });
        selector = selector.replace(match, Array(length + 1).join(" "));
      }
    }
  };
  (function() {
    var replaceWithPlainText = function(regex) {
      var matches, i, len, match;
      if (regex.test(selector)) {
        matches = selector.match(regex);
        for (i = 0, len = matches.length; i < len; i += 1) {
          match = matches[i];
          selector = selector.replace(match, Array(match.length + 1).join("A"));
        }
      }
    }, escapeHexadecimalRegex = /\\[0-9A-Fa-f]{6}\s?/g, escapeHexadecimalRegex2 = /\\[0-9A-Fa-f]{1,5}\s/g, escapeSpecialCharacter = /\\./g;
    replaceWithPlainText(escapeHexadecimalRegex);
    replaceWithPlainText(escapeHexadecimalRegex2);
    replaceWithPlainText(escapeSpecialCharacter);
  })();
  (function() {
    var regex = /{[^]*/gm, matches, i, len, match;
    if (regex.test(selector)) {
      matches = selector.match(regex);
      for (i = 0, len = matches.length; i < len; i += 1) {
        match = matches[i];
        selector = selector.replace(match, Array(match.length + 1).join(" "));
      }
    }
  })();
  findMatch(attributeRegex, "b");
  findMatch(idRegex, "a");
  findMatch(classRegex, "b");
  findMatch(pseudoElementRegex, "c");
  findMatch(pseudoClassWithBracketsRegex, "b");
  findMatch(pseudoClassRegex, "b");
  selector = selector.replace(/[\*\s\+>~]/g, " ");
  selector = selector.replace(/[#\.]/g, " ");
  selector = selector.replace(/:not/g, "    ");
  selector = selector.replace(/:local/g, "      ");
  selector = selector.replace(/:global/g, "       ");
  selector = selector.replace(/[\(\)]/g, " ");
  findMatch(elementRegex, "c");
  parts.sort(function(a, b2) {
    return a.index - b2.index;
  });
  return {
    selector: input,
    specificity: "0," + typeCount.a.toString() + "," + typeCount.b.toString() + "," + typeCount.c.toString(),
    specificityArray: [0, typeCount.a, typeCount.b, typeCount.c],
    parts
  };
};
var compare = function(a, b2) {
  var aSpecificity, bSpecificity, i;
  if (typeof a === "string") {
    if (a.indexOf(",") !== -1) {
      throw "Invalid CSS selector";
    } else {
      aSpecificity = calculateSingle(a)["specificityArray"];
    }
  } else if (Array.isArray(a)) {
    if (a.filter(function(e2) {
      return typeof e2 === "number";
    }).length !== 4) {
      throw "Invalid specificity array";
    } else {
      aSpecificity = a;
    }
  } else {
    throw "Invalid CSS selector or specificity array";
  }
  if (typeof b2 === "string") {
    if (b2.indexOf(",") !== -1) {
      throw "Invalid CSS selector";
    } else {
      bSpecificity = calculateSingle(b2)["specificityArray"];
    }
  } else if (Array.isArray(b2)) {
    if (b2.filter(function(e2) {
      return typeof e2 === "number";
    }).length !== 4) {
      throw "Invalid specificity array";
    } else {
      bSpecificity = b2;
    }
  } else {
    throw "Invalid CSS selector or specificity array";
  }
  for (i = 0; i < 4; i += 1) {
    if (aSpecificity[i] < bSpecificity[i]) {
      return -1;
    } else if (aSpecificity[i] > bSpecificity[i]) {
      return 1;
    }
  }
  return 0;
};

// node_modules/svg2pdf.js/dist/svg2pdf.es.min.js
var l = function(t2, e2) {
  return (l = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
    t3.__proto__ = e3;
  } || function(t3, e3) {
    for (var r in e3)
      e3.hasOwnProperty(r) && (t3[r] = e3[r]);
  })(t2, e2);
};
function u(t2, e2) {
  function r() {
    this.constructor = t2;
  }
  l(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (r.prototype = e2.prototype, new r());
}
var h = function() {
  return (h = Object.assign || function(t2) {
    for (var e2, r = 1, i = arguments.length; r < i; r++)
      for (var n in e2 = arguments[r])
        Object.prototype.hasOwnProperty.call(e2, n) && (t2[n] = e2[n]);
    return t2;
  }).apply(this, arguments);
};
function f(t2, e2, r, i) {
  return new (r || (r = Promise))(function(n, a) {
    function s2(t3) {
      try {
        l2(i.next(t3));
      } catch (t4) {
        a(t4);
      }
    }
    function o(t3) {
      try {
        l2(i.throw(t3));
      } catch (t4) {
        a(t4);
      }
    }
    function l2(t3) {
      var e3;
      t3.done ? n(t3.value) : (e3 = t3.value, e3 instanceof r ? e3 : new r(function(t4) {
        t4(e3);
      })).then(s2, o);
    }
    l2((i = i.apply(t2, e2 || [])).next());
  });
}
function c(t2, e2) {
  var r, i, n, a, s2 = { label: 0, sent: function() {
    if (1 & n[0])
      throw n[1];
    return n[1];
  }, trys: [], ops: [] };
  return a = { next: o(0), throw: o(1), return: o(2) }, "function" == typeof Symbol && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function o(a2) {
    return function(o2) {
      return function(a3) {
        if (r)
          throw new TypeError("Generator is already executing.");
        for (; s2; )
          try {
            if (r = 1, i && (n = 2 & a3[0] ? i.return : a3[0] ? i.throw || ((n = i.return) && n.call(i), 0) : i.next) && !(n = n.call(i, a3[1])).done)
              return n;
            switch (i = 0, n && (a3 = [2 & a3[0], n.value]), a3[0]) {
              case 0:
              case 1:
                n = a3;
                break;
              case 4:
                return s2.label++, { value: a3[1], done: false };
              case 5:
                s2.label++, i = a3[1], a3 = [0];
                continue;
              case 7:
                a3 = s2.ops.pop(), s2.trys.pop();
                continue;
              default:
                if (!(n = s2.trys, (n = n.length > 0 && n[n.length - 1]) || 6 !== a3[0] && 2 !== a3[0])) {
                  s2 = 0;
                  continue;
                }
                if (3 === a3[0] && (!n || a3[1] > n[0] && a3[1] < n[3])) {
                  s2.label = a3[1];
                  break;
                }
                if (6 === a3[0] && s2.label < n[1]) {
                  s2.label = n[1], n = a3;
                  break;
                }
                if (n && s2.label < n[2]) {
                  s2.label = n[2], s2.ops.push(a3);
                  break;
                }
                n[2] && s2.ops.pop(), s2.trys.pop();
                continue;
            }
            a3 = e2.call(t2, s2);
          } catch (t3) {
            a3 = [6, t3], i = 0;
          } finally {
            r = n = 0;
          }
        if (5 & a3[0])
          throw a3[1];
        return { value: a3[0] ? a3[1] : void 0, done: true };
      }([a2, o2]);
    };
  }
}
var p = function() {
  function t2(t3) {
    if (this.a = void 0, this.r = 0, this.g = 0, this.b = 0, this.simpleColors = {}, this.colorDefs = [], this.ok = false, t3) {
      for (var e2 in "#" == t3.charAt(0) && (t3 = t3.substr(1, 6)), t3 = (t3 = t3.replace(/ /g, "")).toLowerCase(), this.simpleColors = { aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "00ffff", aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "000000", blanchedalmond: "ffebcd", blue: "0000ff", blueviolet: "8a2be2", brown: "a52a2a", burlywood: "deb887", cadetblue: "5f9ea0", chartreuse: "7fff00", chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed", cornsilk: "fff8dc", crimson: "dc143c", cyan: "00ffff", darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b", darkgray: "a9a9a9", darkgrey: "a9a9a9", darkgreen: "006400", darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f", darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000", darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b", darkslategray: "2f4f4f", darkslategrey: "2f4f4f", darkturquoise: "00ced1", darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff", dimgray: "696969", dimgrey: "696969", dodgerblue: "1e90ff", feldspar: "d19275", firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22", fuchsia: "ff00ff", gainsboro: "dcdcdc", ghostwhite: "f8f8ff", gold: "ffd700", goldenrod: "daa520", gray: "808080", grey: "808080", green: "008000", greenyellow: "adff2f", honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c", indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c", lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00", lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080", lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgray: "d3d3d3", lightgrey: "d3d3d3", lightgreen: "90ee90", lightpink: "ffb6c1", lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa", lightslateblue: "8470ff", lightslategray: "778899", lightslategrey: "778899", lightsteelblue: "b0c4de", lightyellow: "ffffe0", lime: "00ff00", limegreen: "32cd32", linen: "faf0e6", magenta: "ff00ff", maroon: "800000", mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3", mediumpurple: "9370d8", mediumseagreen: "3cb371", mediumslateblue: "7b68ee", mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585", midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1", moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080", oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23", orange: "ffa500", orangered: "ff4500", orchid: "da70d6", palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee", palevioletred: "d87093", papayawhip: "ffefd5", peachpuff: "ffdab9", peru: "cd853f", pink: "ffc0cb", plum: "dda0dd", powderblue: "b0e0e6", purple: "800080", red: "ff0000", rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513", salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57", seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0", skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090", slategrey: "708090", snow: "fffafa", springgreen: "00ff7f", steelblue: "4682b4", tan: "d2b48c", teal: "008080", thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0", violet: "ee82ee", violetred: "d02090", wheat: "f5deb3", white: "ffffff", whitesmoke: "f5f5f5", yellow: "ffff00", yellowgreen: "9acd32" }, this.simpleColors)
        t3 == e2 && (t3 = this.simpleColors[e2]);
      this.colorDefs = [{ re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/, example: ["rgb(123, 234, 45)", "rgb(255,234,245)"], process: function(t4) {
        return [parseInt(t4[1]), parseInt(t4[2]), parseInt(t4[3])];
      } }, { re: /^(\w{2})(\w{2})(\w{2})$/, example: ["#00ff00", "336699"], process: function(t4) {
        return [parseInt(t4[1], 16), parseInt(t4[2], 16), parseInt(t4[3], 16)];
      } }, { re: /^(\w{1})(\w{1})(\w{1})$/, example: ["#fb0", "f0f"], process: function(t4) {
        return [parseInt(t4[1] + t4[1], 16), parseInt(t4[2] + t4[2], 16), parseInt(t4[3] + t4[3], 16)];
      } }];
      for (var r = 0; r < this.colorDefs.length; r++) {
        var i = this.colorDefs[r].re, n = this.colorDefs[r].process, a = i.exec(t3);
        if (a) {
          var s2 = n(a);
          this.r = s2[0], this.g = s2[1], this.b = s2[2], this.ok = true;
        }
      }
      this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r, this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g, this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b;
    }
  }
  return t2.prototype.toRGB = function() {
    return "rgb(" + this.r + ", " + this.g + ", " + this.b + ")";
  }, t2.prototype.toRGBA = function() {
    return "rgba(" + this.r + ", " + this.g + ", " + this.b + ", " + (this.a || "1") + ")";
  }, t2.prototype.toHex = function() {
    var t3 = this.r.toString(16), e2 = this.g.toString(16), r = this.b.toString(16);
    return 1 == t3.length && (t3 = "0" + t3), 1 == e2.length && (e2 = "0" + e2), 1 == r.length && (r = "0" + r), "#" + t3 + e2 + r;
  }, t2.prototype.getHelpXML = function() {
    for (var e2 = [], r = 0; r < this.colorDefs.length; r++)
      for (var i = this.colorDefs[r].example, n = 0; n < i.length; n++)
        e2[e2.length] = i[n];
    for (var a in this.simpleColors)
      e2[e2.length] = a;
    var s2 = document.createElement("ul");
    s2.setAttribute("id", "rgbcolor-examples");
    for (r = 0; r < e2.length; r++)
      try {
        var o = document.createElement("li"), l2 = new t2(e2[r]), u2 = document.createElement("div");
        u2.style.cssText = "margin: 3px; border: 1px solid black; background:" + l2.toHex() + "; color:" + l2.toHex(), u2.appendChild(document.createTextNode("test"));
        var h2 = document.createTextNode(" " + e2[r] + " -> " + l2.toRGB() + " -> " + l2.toHex());
        o.appendChild(u2), o.appendChild(h2), s2.appendChild(o);
      } catch (t3) {
      }
    return s2;
  }, t2;
}();
var d = function() {
  function t2(t3) {
    this.color = t3;
  }
  return t2.prototype.getFillData = function(t3, e2) {
    return f(this, void 0, void 0, function() {
      return c(this, function(t4) {
        return [2, void 0];
      });
    });
  }, t2;
}();
var m = function() {
  function t2() {
    this.xmlSpace = "", this.fill = null, this.fillOpacity = 1, this.fontFamily = "", this.fontSize = 16, this.fontStyle = "", this.fontWeight = "", this.opacity = 1, this.stroke = null, this.strokeDasharray = null, this.strokeDashoffset = 0, this.strokeLinecap = "", this.strokeLinejoin = "", this.strokeMiterlimit = 4, this.strokeOpacity = 1, this.strokeWidth = 1, this.alignmentBaseline = "", this.textAnchor = "", this.visibility = "", this.color = null;
  }
  return t2.prototype.clone = function() {
    var e2 = new t2();
    return e2.xmlSpace = this.xmlSpace, e2.fill = this.fill, e2.fillOpacity = this.fillOpacity, e2.fontFamily = this.fontFamily, e2.fontSize = this.fontSize, e2.fontStyle = this.fontStyle, e2.fontWeight = this.fontWeight, e2.opacity = this.opacity, e2.stroke = this.stroke, e2.strokeDasharray = this.strokeDasharray, e2.strokeDashoffset = this.strokeDashoffset, e2.strokeLinecap = this.strokeLinecap, e2.strokeLinejoin = this.strokeLinejoin, e2.strokeMiterlimit = this.strokeMiterlimit, e2.strokeOpacity = this.strokeOpacity, e2.strokeWidth = this.strokeWidth, e2.textAnchor = this.textAnchor, e2.alignmentBaseline = this.alignmentBaseline, e2.visibility = this.visibility, e2.color = this.color, e2;
  }, t2.default = function() {
    var e2 = new t2();
    return e2.xmlSpace = "default", e2.fill = new d(new p("rgb(0, 0, 0)")), e2.fillOpacity = 1, e2.fontFamily = "times", e2.fontSize = 16, e2.fontStyle = "normal", e2.fontWeight = "normal", e2.opacity = 1, e2.stroke = null, e2.strokeDasharray = null, e2.strokeDashoffset = 0, e2.strokeLinecap = "butt", e2.strokeLinejoin = "miter", e2.strokeMiterlimit = 4, e2.strokeOpacity = 1, e2.strokeWidth = 1, e2.alignmentBaseline = "baseline", e2.textAnchor = "start", e2.visibility = "visible", e2.color = new p("rgb(0, 0, 0)"), e2;
  }, t2;
}();
var g = /url\(["']?#([^"']+)["']?\)/;
var y = { bottom: "bottom", "text-bottom": "bottom", top: "top", "text-top": "top", hanging: "hanging", middle: "middle", central: "middle", center: "middle", mathematical: "middle", ideographic: "ideographic", alphabetic: "alphabetic", baseline: "alphabetic" };
var b = function() {
  function t2() {
    this.measureMethods = {};
  }
  return t2.prototype.getTextOffset = function(t3, e2) {
    var r = e2.textAnchor;
    if ("start" === r)
      return 0;
    var i = this.measureTextWidth(t3, e2), n = 0;
    switch (r) {
      case "end":
        n = i;
        break;
      case "middle":
        n = i / 2;
    }
    return n;
  }, t2.prototype.measureTextWidth = function(t3, e2) {
    if (0 === t3.length)
      return 0;
    var r = e2.fontFamily;
    return this.getMeasureFunction(r).call(this, t3, e2.fontFamily, e2.fontSize + "px", e2.fontStyle, e2.fontWeight);
  }, t2.prototype.getMeasurementTextNode = function() {
    if (!this.textMeasuringTextElement) {
      this.textMeasuringTextElement = document.createElementNS("http://www.w3.org/2000/svg", "text");
      var t3 = document.createElementNS("http://www.w3.org/2000/svg", "svg");
      t3.appendChild(this.textMeasuringTextElement), t3.style.setProperty("position", "absolute"), t3.style.setProperty("visibility", "hidden"), document.body.appendChild(t3);
    }
    return this.textMeasuringTextElement;
  }, t2.prototype.canvasTextMeasure = function(t3, e2, r, i, n) {
    var a = document.createElement("canvas").getContext("2d");
    return null != a ? (a.font = [i, n, r, e2].join(" "), a.measureText(t3).width) : 0;
  }, t2.prototype.svgTextMeasure = function(t3, e2, r, i, n, a) {
    void 0 === a && (a = this.getMeasurementTextNode());
    var s2 = a;
    return s2.setAttribute("font-family", e2), s2.setAttribute("font-size", r), s2.setAttribute("font-style", i), s2.setAttribute("font-weight", n), s2.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), s2.textContent = t3, s2.getBBox().width;
  }, t2.prototype.getMeasureFunction = function(e2) {
    var r = this.measureMethods[e2];
    if (!r) {
      var i = this.canvasTextMeasure(t2.testString, e2, "16px", "normal", "normal"), n = this.svgTextMeasure(t2.testString, e2, "16px", "normal", "normal");
      r = Math.abs(i - n) < t2.epsilon ? this.canvasTextMeasure : this.svgTextMeasure, this.measureMethods[e2] = r;
    }
    return r;
  }, t2.prototype.cleanupTextMeasuring = function() {
    if (this.textMeasuringTextElement) {
      var t3 = this.textMeasuringTextElement.parentNode;
      t3 && document.body.removeChild(t3), this.textMeasuringTextElement = void 0;
    }
  }, t2.testString = `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789!"$%&/()=?'\\+*-_.:,;^}][{#~|<>`, t2.epsilon = 0.1, t2;
}();
var v = function() {
  function t2(t3, e2) {
    var r, i, n, a, s2, o;
    this.pdf = t3, this.svg2pdfParameters = e2.svg2pdfParameters, this.attributeState = e2.attributeState ? e2.attributeState.clone() : m.default(), this.viewport = e2.viewport, this.refsHandler = null !== (r = e2.refsHandler) && void 0 !== r ? r : null, this.styleSheets = null !== (i = e2.styleSheets) && void 0 !== i ? i : null, this.textMeasure = null !== (n = e2.textMeasure) && void 0 !== n ? n : new b(), this.transform = null !== (a = e2.transform) && void 0 !== a ? a : this.pdf.unitMatrix, this.withinClipPath = null !== (s2 = e2.withinClipPath) && void 0 !== s2 && s2, this.withinUse = null !== (o = e2.withinUse) && void 0 !== o && o;
  }
  return t2.prototype.clone = function(e2) {
    var r, i, n, a, s2, o, l2, u2;
    return void 0 === e2 && (e2 = {}), new t2(this.pdf, { svg2pdfParameters: null !== (r = e2.svg2pdfParameters) && void 0 !== r ? r : this.svg2pdfParameters, attributeState: e2.attributeState ? e2.attributeState.clone() : this.attributeState.clone(), viewport: null !== (i = e2.viewport) && void 0 !== i ? i : this.viewport, refsHandler: null !== (n = e2.refsHandler) && void 0 !== n ? n : this.refsHandler, styleSheets: null !== (a = e2.styleSheets) && void 0 !== a ? a : this.styleSheets, textMeasure: null !== (s2 = e2.textMeasure) && void 0 !== s2 ? s2 : this.textMeasure, transform: null !== (o = e2.transform) && void 0 !== o ? o : this.transform, withinClipPath: null !== (l2 = e2.withinClipPath) && void 0 !== l2 ? l2 : this.withinClipPath, withinUse: null !== (u2 = e2.withinUse) && void 0 !== u2 ? u2 : this.withinUse });
  }, t2;
}();
var x = function() {
  function e2(t2) {
    this.renderedElements = {}, this.idMap = t2;
  }
  return e2.prototype.getRendered = function(t2, r, i) {
    return f(this, void 0, void 0, function() {
      var n, a;
      return c(this, function(s2) {
        switch (s2.label) {
          case 0:
            return n = e2.generateKey(t2, r), this.renderedElements.hasOwnProperty(n) ? [2, this.renderedElements[t2]] : (a = this.get(t2), this.renderedElements[n] = a, [4, i(a)]);
          case 1:
            return s2.sent(), [2, a];
        }
      });
    });
  }, e2.prototype.get = function(e3) {
    return this.idMap[(0, import_cssesc.default)(e3, { isIdentifier: true })];
  }, e2.generateKey = function(t2, e3) {
    return t2 + "|" + (e3 || new p("rgb(0,0,0)")).toRGBA();
  }, e2;
}();
function S(t2, e2) {
  return Math.atan2(e2[1] - t2[1], e2[0] - t2[0]);
}
function w(t2, e2) {
  return [2 / 3 * (e2[0] - t2[0]) + t2[0], 2 / 3 * (e2[1] - t2[1]) + t2[1]];
}
function k(t2) {
  var e2 = Math.sqrt(t2[0] * t2[0] + t2[1] * t2[1]);
  return [t2[0] / e2, t2[1] / e2];
}
function M(t2, e2) {
  return k([e2[0] - t2[0], e2[1] - t2[1]]);
}
function T(t2, e2) {
  return [t2[0] + e2[0], t2[1] + e2[1]];
}
function C2(t2, e2) {
  var r = t2[0], i = t2[1];
  return [e2.a * r + e2.c * i + e2.e, e2.b * r + e2.d * i + e2.f];
}
var F = function() {
  function t2() {
    this.segments = [];
  }
  return t2.prototype.moveTo = function(t3, e2) {
    return this.segments.push(new A(t3, e2)), this;
  }, t2.prototype.lineTo = function(t3, e2) {
    return this.segments.push(new P(t3, e2)), this;
  }, t2.prototype.curveTo = function(t3, e2, r, i, n, a) {
    return this.segments.push(new B(t3, e2, r, i, n, a)), this;
  }, t2.prototype.close = function() {
    return this.segments.push(new N()), this;
  }, t2.prototype.transform = function(t3) {
    this.segments.forEach(function(e2) {
      if (e2 instanceof A || e2 instanceof P || e2 instanceof B) {
        var r = C2([e2.x, e2.y], t3);
        e2.x = r[0], e2.y = r[1];
      }
      if (e2 instanceof B) {
        var i = C2([e2.x1, e2.y1], t3), n = C2([e2.x2, e2.y2], t3);
        e2.x1 = i[0], e2.y1 = i[1], e2.x2 = n[0], e2.y2 = n[1];
      }
    });
  }, t2.prototype.draw = function(t3) {
    var e2 = t3.pdf;
    this.segments.forEach(function(t4) {
      t4 instanceof A ? e2.moveTo(t4.x, t4.y) : t4 instanceof P ? e2.lineTo(t4.x, t4.y) : t4 instanceof B ? e2.curveTo(t4.x1, t4.y1, t4.x2, t4.y2, t4.x, t4.y) : e2.close();
    });
  }, t2;
}();
var A = function(t2, e2) {
  this.x = t2, this.y = e2;
};
var P = function(t2, e2) {
  this.x = t2, this.y = e2;
};
var B = function(t2, e2, r, i, n, a) {
  this.x1 = t2, this.y1 = e2, this.x2 = r, this.y2 = i, this.x = n, this.y = a;
};
var N = function() {
};
function O2(t2, e2) {
  return e2.split(",").indexOf((t2.nodeName || t2.tagName).toLowerCase()) >= 0;
}
function E(t2, e2, r, i) {
  void 0 === i && (i = r);
  var n = t2.style.getPropertyValue(i);
  if (n)
    return n;
  var a = e2.getPropertyValue(t2, i);
  return a || (t2.hasAttribute(r) && t2.getAttribute(r) || void 0);
}
function L(t2, e2, r) {
  if ("none" === E(t2.element, r.styleSheets, "display"))
    return false;
  var i = e2, n = E(t2.element, r.styleSheets, "visibility");
  return n && (i = "hidden" !== n), i;
}
function I2(t2, e2, r) {
  var i = L(t2, e2, r);
  return 0 !== t2.element.childNodes.length && (t2.children.forEach(function(t3) {
    t3.isVisible(i, r) && (i = true);
  }), i);
}
var H = function() {
  function t2() {
    this.markers = [];
  }
  return t2.prototype.addMarker = function(t3) {
    this.markers.push(t3);
  }, t2.prototype.draw = function(t3) {
    return f(this, void 0, void 0, function() {
      var e2, r, i, n, a, s2, o;
      return c(this, function(l2) {
        switch (l2.label) {
          case 0:
            e2 = 0, l2.label = 1;
          case 1:
            return e2 < this.markers.length ? (r = this.markers[e2], i = void 0, n = r.angle, a = r.anchor, s2 = Math.cos(n), o = Math.sin(n), i = t3.pdf.Matrix(s2, o, -o, s2, a[0], a[1]), i = t3.pdf.matrixMult(t3.pdf.Matrix(t3.attributeState.strokeWidth, 0, 0, t3.attributeState.strokeWidth, 0, 0), i), i = t3.pdf.matrixMult(i, t3.transform), t3.pdf.saveGraphicsState(), t3.pdf.setLineWidth(1), [4, t3.refsHandler.getRendered(r.id, null, function(e3) {
              return e3.apply(t3);
            })]) : [3, 4];
          case 2:
            l2.sent(), t3.pdf.doFormObject(r.id, i), t3.pdf.restoreGraphicsState(), l2.label = 3;
          case 3:
            return e2++, [3, 1];
          case 4:
            return [2];
        }
      });
    });
  }, t2;
}();
var V = function(t2, e2, r) {
  this.id = t2, this.anchor = e2, this.angle = r;
};
function R(t2, e2) {
  var r;
  return (r = t2 && t2.toString().match(/^([\-0-9.]+)em$/)) ? parseFloat(r[1]) * e2 : (r = t2 && t2.toString().match(/^([\-0-9.]+)(px|)$/)) ? parseFloat(r[1]) : 0;
}
function D(t2) {
  return y[t2] || "alphabetic";
}
function W(t2) {
  for (var e2, r = [], i = /[+-]?(?:(?:\d+\.?\d*)|(?:\d*\.?\d+))(?:[eE][+-]?\d+)?/g; e2 = i.exec(t2); )
    r.push(parseFloat(e2[0]));
  return r;
}
function G(t2, e2) {
  if ("transparent" === t2) {
    var r = new p("rgb(0,0,0)");
    return r.a = 0, r;
  }
  if ("currentcolor" === t2.toLowerCase())
    return e2 || new p("rgb(0,0,0)");
  var i = /\s*rgba\(((?:[^,\)]*,){3}[^,\)]*)\)\s*/.exec(t2);
  if (i) {
    var n = W(i[1]), a = new p("rgb(" + n.slice(0, 3).join(",") + ")");
    return a.a = n[3], a;
  }
  return new p(t2);
}
var j2 = { "sans-serif": "helvetica", verdana: "helvetica", arial: "helvetica", fixed: "courier", monospace: "courier", terminal: "courier", serif: "times", cursive: "times", fantasy: "times" };
function U(t2, e2) {
  if ("none" === E(e2.element, t2.styleSheets, "display"))
    return [0, 0, 0, 0];
  var r = [0, 0, 0, 0];
  return e2.children.forEach(function(e3) {
    var i = e3.getBoundingBox(t2);
    r = [Math.min(r[0], i[0]), Math.min(r[1], i[1]), Math.max(r[0] + r[2], i[0] + i[2]) - Math.min(r[0], i[0]), Math.max(r[1] + r[3], i[1] + i[3]) - Math.min(r[1], i[1])];
  }), r;
}
function z(t2, e2) {
  var r = parseFloat, i = r(t2.getAttribute("x1")) || r(E(t2, e2.styleSheets, "x")) || r(E(t2, e2.styleSheets, "cx")) - r(E(t2, e2.styleSheets, "r")) || 0, n = r(t2.getAttribute("x2")) || i + r(E(t2, e2.styleSheets, "width")) || r(E(t2, e2.styleSheets, "cx")) + r(E(t2, e2.styleSheets, "r")) || 0, a = r(t2.getAttribute("y1")) || r(E(t2, e2.styleSheets, "y")) || r(E(t2, e2.styleSheets, "cy")) - r(E(t2, e2.styleSheets, "r")) || 0, s2 = r(t2.getAttribute("y2")) || a + r(E(t2, e2.styleSheets, "height")) || r(E(t2, e2.styleSheets, "cy")) + r(E(t2, e2.styleSheets, "r")) || 0;
  return [Math.min(i, n), Math.min(a, s2), Math.max(i, n) - Math.min(i, n), Math.max(a, s2) - Math.min(a, s2)];
}
function Y(t2, e2, r, i, n, a, s2, o) {
  void 0 === o && (o = false);
  var l2, u2, h2 = e2[0], f2 = e2[1], c2 = e2[2], p2 = e2[3], d2 = n / c2, m2 = a / p2, g2 = t2.getAttribute("preserveAspectRatio");
  if (g2) {
    var y2 = g2.split(" ");
    "defer" === y2[0] && (y2 = y2.slice(1)), l2 = y2[0], u2 = y2[1] || "meet";
  } else
    l2 = "xMidYMid", u2 = "meet";
  if ("none" !== l2 && ("meet" === u2 ? d2 = m2 = Math.min(d2, m2) : "slice" === u2 && (d2 = m2 = Math.max(d2, m2))), o)
    return s2.pdf.Matrix(d2, 0, 0, m2, 0, 0);
  var b2 = r - h2 * d2, v2 = i - f2 * m2;
  l2.indexOf("xMid") >= 0 ? b2 += (n - c2 * d2) / 2 : l2.indexOf("xMax") >= 0 && (b2 += n - c2 * d2), l2.indexOf("YMid") >= 0 ? v2 += (a - p2 * m2) / 2 : l2.indexOf("YMax") >= 0 && (v2 += a - p2 * m2);
  var x2 = s2.pdf.Matrix(1, 0, 0, 1, b2, v2), S2 = s2.pdf.Matrix(d2, 0, 0, m2, 0, 0);
  return s2.pdf.matrixMult(S2, x2);
}
function X(t2, e2) {
  if (!t2 || "none" === t2)
    return e2.pdf.unitMatrix;
  for (var r, i, n = /^[\s,]*matrix\(([^)]+)\)\s*/, a = /^[\s,]*translate\(([^)]+)\)\s*/, s2 = /^[\s,]*rotate\(([^)]+)\)\s*/, o = /^[\s,]*scale\(([^)]+)\)\s*/, l2 = /^[\s,]*skewX\(([^)]+)\)\s*/, u2 = /^[\s,]*skewY\(([^)]+)\)\s*/, h2 = e2.pdf.unitMatrix; t2.length > 0 && t2.length !== i; ) {
    i = t2.length;
    var f2 = n.exec(t2);
    if (f2 && (r = W(f2[1]), h2 = e2.pdf.matrixMult(e2.pdf.Matrix(r[0], r[1], r[2], r[3], r[4], r[5]), h2), t2 = t2.substr(f2[0].length)), f2 = s2.exec(t2)) {
      r = W(f2[1]);
      var c2 = Math.PI * r[0] / 180;
      if (h2 = e2.pdf.matrixMult(e2.pdf.Matrix(Math.cos(c2), Math.sin(c2), -Math.sin(c2), Math.cos(c2), 0, 0), h2), r[1] || r[2]) {
        var p2 = e2.pdf.Matrix(1, 0, 0, 1, r[1], r[2]), d2 = e2.pdf.Matrix(1, 0, 0, 1, -r[1], -r[2]);
        h2 = e2.pdf.matrixMult(d2, e2.pdf.matrixMult(h2, p2));
      }
      t2 = t2.substr(f2[0].length);
    }
    (f2 = a.exec(t2)) && (r = W(f2[1]), h2 = e2.pdf.matrixMult(e2.pdf.Matrix(1, 0, 0, 1, r[0], r[1] || 0), h2), t2 = t2.substr(f2[0].length)), (f2 = o.exec(t2)) && ((r = W(f2[1]))[1] || (r[1] = r[0]), h2 = e2.pdf.matrixMult(e2.pdf.Matrix(r[0], 0, 0, r[1], 0, 0), h2), t2 = t2.substr(f2[0].length)), (f2 = l2.exec(t2)) && (r = parseFloat(f2[1]), r *= Math.PI / 180, h2 = e2.pdf.matrixMult(e2.pdf.Matrix(1, 0, Math.tan(r), 1, 0, 0), h2), t2 = t2.substr(f2[0].length)), (f2 = u2.exec(t2)) && (r = parseFloat(f2[1]), r *= Math.PI / 180, h2 = e2.pdf.matrixMult(e2.pdf.Matrix(1, Math.tan(r), 0, 1, 0, 0), h2), t2 = t2.substr(f2[0].length));
  }
  return h2;
}
var q = function() {
  function t2(t3, e2) {
    this.element = t3, this.children = e2, this.parent = null;
  }
  return t2.prototype.setParent = function(t3) {
    this.parent = t3;
  }, t2.prototype.getParent = function() {
    return this.parent;
  }, t2.prototype.getBoundingBox = function(t3) {
    return "none" === E(this.element, t3.styleSheets, "display") ? [0, 0, 0, 0] : this.getBoundingBoxCore(t3);
  }, t2.prototype.computeNodeTransform = function(t3) {
    var e2 = this.computeNodeTransformCore(t3), r = E(this.element, t3.styleSheets, "transform");
    return r ? t3.pdf.matrixMult(e2, X(r, t3)) : e2;
  }, t2;
}();
var _ = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.render = function(t3) {
    return Promise.resolve();
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return [];
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2;
}(q);
var $ = function(t2) {
  function e2(e3, r, i) {
    var n = t2.call(this, r, i) || this;
    return n.pdfGradientType = e3, n.contextColor = void 0, n;
  }
  return u(e2, t2), e2.prototype.apply = function(t3) {
    return f(this, void 0, void 0, function() {
      var n, a, s2, o, l2, u2, h2, f2, p2 = this;
      return c(this, function(c2) {
        if (!(n = this.element.getAttribute("id")))
          return [2];
        if (void 0 === this.contextColor)
          for (this.contextColor = null, a = this; a; ) {
            if (s2 = E(a.element, t3.styleSheets, "color")) {
              this.contextColor = G(s2, null);
              break;
            }
            a = a.getParent();
          }
        return o = [], l2 = 0, u2 = false, this.children.forEach(function(r) {
          if ("stop" === r.element.tagName.toLowerCase()) {
            var i = E(r.element, t3.styleSheets, "color"), n2 = G(E(r.element, t3.styleSheets, "stop-color") || "", i ? G(i, null) : p2.contextColor);
            o.push({ offset: e2.parseGradientOffset(r.element.getAttribute("offset") || "0"), color: [n2.r, n2.g, n2.b] });
            var a2 = E(r.element, t3.styleSheets, "stop-opacity");
            a2 && "1" !== a2 && (l2 += parseFloat(a2), u2 = true);
          }
        }), u2 && (h2 = new I({ opacity: l2 / o.length })), f2 = new C(this.pdfGradientType, this.getCoordinates(), o, h2), t3.pdf.addShadingPattern(n, f2), [2];
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return z(this.element, t3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2.parseGradientOffset = function(t3) {
    var e3 = parseFloat(t3);
    return !isNaN(e3) && t3.indexOf("%") >= 0 ? e3 / 100 : e3;
  }, e2;
}(_);
var Q = function(t2) {
  function e2(e3, r) {
    return t2.call(this, "axial", e3, r) || this;
  }
  return u(e2, t2), e2.prototype.getCoordinates = function() {
    return [parseFloat(this.element.getAttribute("x1") || "0"), parseFloat(this.element.getAttribute("y1") || "0"), parseFloat(this.element.getAttribute("x2") || "1"), parseFloat(this.element.getAttribute("y2") || "0")];
  }, e2;
}($);
var K = function(t2) {
  function e2(e3, r) {
    return t2.call(this, "radial", e3, r) || this;
  }
  return u(e2, t2), e2.prototype.getCoordinates = function() {
    var t3 = this.element.getAttribute("cx"), e3 = this.element.getAttribute("cy"), r = this.element.getAttribute("fx"), i = this.element.getAttribute("fy");
    return [parseFloat(r || t3 || "0.5"), parseFloat(i || e3 || "0.5"), 0, parseFloat(t3 || "0.5"), parseFloat(e3 || "0.5"), parseFloat(this.element.getAttribute("r") || "0.5")];
  }, e2;
}($);
var J = function() {
  function t2(t3, e2) {
    this.key = t3, this.gradient = e2;
  }
  return t2.prototype.getFillData = function(t3, e2) {
    return f(this, void 0, void 0, function() {
      var r, i, n;
      return c(this, function(a) {
        switch (a.label) {
          case 0:
            return [4, e2.refsHandler.getRendered(this.key, null, function(t4) {
              return t4.apply(new v(e2.pdf, { refsHandler: e2.refsHandler, textMeasure: e2.textMeasure, styleSheets: e2.styleSheets, viewport: e2.viewport, svg2pdfParameters: e2.svg2pdfParameters }));
            })];
          case 1:
            return a.sent(), this.gradient.element.hasAttribute("gradientUnits") && "objectboundingbox" !== this.gradient.element.getAttribute("gradientUnits").toLowerCase() ? r = e2.pdf.unitMatrix : (i = t3.getBoundingBox(e2), r = e2.pdf.Matrix(i[2], 0, 0, i[3], i[0], i[1])), n = X(E(this.gradient.element, e2.styleSheets, "gradientTransform", "transform"), e2), [2, { key: this.key, matrix: e2.pdf.matrixMult(n, r) }];
        }
      });
    });
  }, t2;
}();
var Z = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.apply = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i, a, s2;
      return c(this, function(o) {
        switch (o.label) {
          case 0:
            if (!(e3 = this.element.getAttribute("id")))
              return [2];
            r = this.getBoundingBox(t3), i = new j([r[0], r[1], r[0] + r[2], r[1] + r[3]], r[2], r[3]), t3.pdf.beginTilingPattern(i), a = 0, s2 = this.children, o.label = 1;
          case 1:
            return a < s2.length ? [4, s2[a].render(new v(t3.pdf, { attributeState: t3.attributeState, refsHandler: t3.refsHandler, styleSheets: t3.styleSheets, viewport: t3.viewport, svg2pdfParameters: t3.svg2pdfParameters }))] : [3, 4];
          case 2:
            o.sent(), o.label = 3;
          case 3:
            return a++, [3, 1];
          case 4:
            return t3.pdf.endTilingPattern(e3, i), [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return z(this.element, t3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2;
}(_);
var tt = function() {
  function t2(t3, e2) {
    this.key = t3, this.pattern = e2;
  }
  return t2.prototype.getFillData = function(t3, e2) {
    return f(this, void 0, void 0, function() {
      var r, i, n, a, s2, o, l2, u2, h2, f2, p2, d2;
      return c(this, function(c2) {
        switch (c2.label) {
          case 0:
            return [4, e2.refsHandler.getRendered(this.key, null, function(t4) {
              return t4.apply(new v(e2.pdf, { refsHandler: e2.refsHandler, textMeasure: e2.textMeasure, styleSheets: e2.styleSheets, viewport: e2.viewport, svg2pdfParameters: e2.svg2pdfParameters }));
            })];
          case 1:
            return c2.sent(), r = { key: this.key, boundingBox: void 0, xStep: 0, yStep: 0, matrix: void 0 }, n = e2.pdf.unitMatrix, this.pattern.element.hasAttribute("patternUnits") && "objectboundingbox" !== this.pattern.element.getAttribute("patternUnits").toLowerCase() || (i = t3.getBoundingBox(e2), n = e2.pdf.Matrix(1, 0, 0, 1, i[0], i[1]), s2 = this.pattern.getBoundingBox(e2), o = s2[0] * i[0] || 0, l2 = s2[1] * i[1] || 0, u2 = s2[2] * i[2] || 0, h2 = s2[3] * i[3] || 0, r.boundingBox = [o, l2, o + u2, l2 + h2], r.xStep = u2, r.yStep = h2), a = e2.pdf.unitMatrix, this.pattern.element.hasAttribute("patternContentUnits") && "objectboundingbox" === this.pattern.element.getAttribute("patternContentUnits").toLowerCase() && (i || (i = t3.getBoundingBox(e2)), a = e2.pdf.Matrix(i[2], 0, 0, i[3], 0, 0), s2 = r.boundingBox || this.pattern.getBoundingBox(e2), o = s2[0] / i[0] || 0, l2 = s2[1] / i[1] || 0, u2 = s2[2] / i[2] || 0, h2 = s2[3] / i[3] || 0, r.boundingBox = [o, l2, o + u2, l2 + h2], r.xStep = u2, r.yStep = h2), f2 = e2.pdf.unitMatrix, (p2 = E(this.pattern.element, e2.styleSheets, "patternTransform", "transform")) && (f2 = X(p2, e2)), d2 = a, d2 = e2.pdf.matrixMult(d2, n), d2 = e2.pdf.matrixMult(d2, f2), d2 = e2.pdf.matrixMult(d2, e2.transform), r.matrix = d2, [2, r];
        }
      });
    });
  }, t2;
}();
function et(t2, r, i) {
  var n = i || r.element, a = E(n, t2.styleSheets, "color");
  if (a) {
    var s2 = G(a, t2.attributeState.color);
    s2.ok ? t2.attributeState.color = s2 : t2.attributeState.color = new p("rgb(0,0,0)");
  }
  var o = E(n, t2.styleSheets, "visibility");
  o && (t2.attributeState.visibility = o);
  var l2 = E(n, t2.styleSheets, "fill");
  l2 && (t2.attributeState.fill = function(t3, e2) {
    var r2 = g.exec(t3);
    if (r2) {
      var i2 = r2[1], n2 = e2.refsHandler.get(i2);
      return n2 && (n2 instanceof Q || n2 instanceof K) ? new J(i2, n2) : n2 && n2 instanceof Z ? new tt(i2, n2) : new d(new p("rgb(0, 0, 0)"));
    }
    var a2 = G(t3, e2.attributeState.color);
    return a2.ok ? new d(a2) : null;
  }(l2, t2));
  var u2 = E(n, t2.styleSheets, "fill-opacity");
  u2 && (t2.attributeState.fillOpacity = parseFloat(u2));
  var h2 = E(n, t2.styleSheets, "stroke-opacity");
  h2 && (t2.attributeState.strokeOpacity = parseFloat(h2));
  var f2 = E(n, t2.styleSheets, "opacity");
  f2 && (t2.attributeState.opacity = parseFloat(f2));
  var c2 = E(n, t2.styleSheets, "stroke-width");
  void 0 !== c2 && "" !== c2 && (t2.attributeState.strokeWidth = Math.abs(parseFloat(c2)));
  var m2 = E(n, t2.styleSheets, "stroke");
  if (m2)
    if ("none" === m2)
      t2.attributeState.stroke = null;
    else {
      var y2 = G(m2, t2.attributeState.color);
      y2.ok && (t2.attributeState.stroke = new d(y2));
    }
  var b2 = E(n, t2.styleSheets, "stroke-linecap");
  b2 && (t2.attributeState.strokeLinecap = b2);
  var v2 = E(n, t2.styleSheets, "stroke-linejoin");
  v2 && (t2.attributeState.strokeLinejoin = v2);
  var x2 = E(n, t2.styleSheets, "stroke-dasharray");
  if (x2) {
    var S2 = parseInt(E(n, t2.styleSheets, "stroke-dashoffset") || "0");
    t2.attributeState.strokeDasharray = W(x2), t2.attributeState.strokeDashoffset = S2;
  }
  var w2 = E(n, t2.styleSheets, "stroke-miterlimit");
  void 0 !== w2 && "" !== w2 && (t2.attributeState.strokeMiterlimit = parseFloat(w2));
  var k2 = n.getAttribute("xml:space");
  k2 && (t2.attributeState.xmlSpace = k2);
  var M2 = E(n, t2.styleSheets, "font-weight");
  M2 && (t2.attributeState.fontWeight = M2);
  var T2 = E(n, t2.styleSheets, "font-style");
  T2 && (t2.attributeState.fontStyle = T2);
  var C3 = E(n, t2.styleSheets, "font-family");
  if (C3) {
    var F2 = import_font_family_papandreou.default.parse(C3);
    t2.attributeState.fontFamily = function(t3, e2, r2) {
      var i2 = "";
      "bold" === t3.fontWeight && (i2 = "bold"), "italic" === t3.fontStyle && (i2 += "italic"), "" === i2 && (i2 = "normal");
      var n2 = r2.pdf.getFontList(), a2 = "";
      return e2.some(function(t4) {
        var e3 = n2[t4];
        return e3 && e3.indexOf(i2) >= 0 ? (a2 = t4, true) : (t4 = t4.toLowerCase(), !!j2.hasOwnProperty(t4) && (a2 = t4, true));
      }) || (a2 = "times"), a2;
    }(t2.attributeState, F2, t2);
  }
  var A2 = E(n, t2.styleSheets, "font-size");
  if (A2) {
    var P2 = t2.pdf.getFontSize();
    t2.attributeState.fontSize = R(A2, P2);
  }
  var B2 = E(n, t2.styleSheets, "vertical-align") || E(n, t2.styleSheets, "alignment-baseline");
  if (B2) {
    var N2 = B2.match(/(baseline|text-bottom|alphabetic|ideographic|middle|central|mathematical|text-top|bottom|center|top|hanging)/);
    N2 && (t2.attributeState.alignmentBaseline = N2[0]);
  }
  var O3 = E(n, t2.styleSheets, "text-anchor");
  O3 && (t2.attributeState.textAnchor = O3);
}
function rt(t2, e2, i) {
  var n = 1, a = 1;
  n *= t2.attributeState.fillOpacity, n *= t2.attributeState.opacity, t2.attributeState.fill instanceof d && void 0 !== t2.attributeState.fill.color.a && (n *= t2.attributeState.fill.color.a), a *= t2.attributeState.strokeOpacity, a *= t2.attributeState.opacity, t2.attributeState.stroke instanceof d && void 0 !== t2.attributeState.stroke.color.a && (a *= t2.attributeState.stroke.color.a);
  var s2, o, l2 = n < 1, u2 = a < 1;
  if (O2(i, "use") ? (l2 = true, u2 = true, n *= t2.attributeState.fill ? 1 : 0, a *= t2.attributeState.stroke ? 1 : 0) : t2.withinUse && (t2.attributeState.fill !== e2.attributeState.fill ? (l2 = true, n *= t2.attributeState.fill ? 1 : 0) : l2 && !t2.attributeState.fill && (n = 0), t2.attributeState.stroke !== e2.attributeState.stroke ? (u2 = true, a *= t2.attributeState.stroke ? 1 : 0) : u2 && !t2.attributeState.stroke && (a = 0)), l2 || u2) {
    var h2 = {};
    l2 && (h2.opacity = n), u2 && (h2["stroke-opacity"] = a), t2.pdf.setGState(new I(h2));
  }
  if (t2.attributeState.fill && t2.attributeState.fill !== e2.attributeState.fill && t2.attributeState.fill instanceof d && t2.attributeState.fill.color.ok && !O2(i, "text") && t2.pdf.setFillColor(t2.attributeState.fill.color.r, t2.attributeState.fill.color.g, t2.attributeState.fill.color.b), t2.attributeState.strokeWidth !== e2.attributeState.strokeWidth && t2.pdf.setLineWidth(t2.attributeState.strokeWidth), t2.attributeState.stroke !== e2.attributeState.stroke && t2.attributeState.stroke instanceof d && t2.pdf.setDrawColor(t2.attributeState.stroke.color.r, t2.attributeState.stroke.color.g, t2.attributeState.stroke.color.b), t2.attributeState.strokeLinecap !== e2.attributeState.strokeLinecap && t2.pdf.setLineCap(t2.attributeState.strokeLinecap), t2.attributeState.strokeLinejoin !== e2.attributeState.strokeLinejoin && t2.pdf.setLineJoin(t2.attributeState.strokeLinejoin), t2.attributeState.strokeDasharray === e2.attributeState.strokeDasharray && t2.attributeState.strokeDashoffset === e2.attributeState.strokeDashoffset || !t2.attributeState.strokeDasharray || t2.pdf.setLineDashPattern(t2.attributeState.strokeDasharray, t2.attributeState.strokeDashoffset), t2.attributeState.strokeMiterlimit !== e2.attributeState.strokeMiterlimit && t2.pdf.setLineMiterLimit(t2.attributeState.strokeMiterlimit), t2.attributeState.fontFamily !== e2.attributeState.fontFamily && (s2 = j2.hasOwnProperty(t2.attributeState.fontFamily) ? j2[t2.attributeState.fontFamily] : t2.attributeState.fontFamily), t2.attributeState.fill && t2.attributeState.fill !== e2.attributeState.fill && t2.attributeState.fill instanceof d && t2.attributeState.fill.color.ok) {
    var f2 = t2.attributeState.fill.color;
    t2.pdf.setTextColor(f2.r, f2.g, f2.b);
  }
  t2.attributeState.fontWeight === e2.attributeState.fontWeight && t2.attributeState.fontStyle === e2.attributeState.fontStyle || (o = "", "bold" === t2.attributeState.fontWeight && (o = "bold"), "italic" === t2.attributeState.fontStyle && (o += "italic"), "" === o && (o = "normal")), void 0 === s2 && void 0 === o || (void 0 === s2 && (s2 = j2.hasOwnProperty(t2.attributeState.fontFamily) ? j2[t2.attributeState.fontFamily] : t2.attributeState.fontFamily), t2.pdf.setFont(s2, o)), t2.attributeState.fontSize !== e2.attributeState.fontSize && t2.pdf.setFontSize(t2.attributeState.fontSize * t2.pdf.internal.scaleFactor);
}
function it(t2, e2) {
  var r = E(t2.element, e2.styleSheets, "clip-path");
  if (r) {
    var i = g.exec(r);
    if (i) {
      var n = i[1];
      return e2.refsHandler.get(n) || void 0;
    }
  }
}
function nt(t2, e2, r) {
  return f(this, void 0, void 0, function() {
    var i, n;
    return c(this, function(a) {
      switch (a.label) {
        case 0:
          return i = r.clone(), e2.element.hasAttribute("clipPathUnits") && "objectboundingbox" === e2.element.getAttribute("clipPathUnits").toLowerCase() && (n = t2.getBoundingBox(r), i.transform = r.pdf.matrixMult(r.pdf.Matrix(n[2], 0, 0, n[3], n[0], n[1]), r.transform)), [4, e2.apply(i)];
        case 1:
          return a.sent(), [2];
      }
    });
  });
}
var at = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.render = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i;
      return c(this, function(n) {
        switch (n.label) {
          case 0:
            return this.isVisible("hidden" !== t3.attributeState.visibility, t3) ? ((e3 = t3.clone()).transform = e3.pdf.matrixMult(this.computeNodeTransform(e3), t3.transform), et(e3, this), (r = this.element.hasAttribute("clip-path") && "none" !== E(this.element, e3.styleSheets, "clip-path")) ? (i = it(this, e3)) && i.isVisible(true, e3) ? (e3.pdf.saveGraphicsState(), [4, nt(this, i, e3)]) : [3, 2] : [3, 3]) : [2];
          case 1:
            return n.sent(), [3, 3];
          case 2:
            return [2];
          case 3:
            return e3.withinClipPath || e3.pdf.saveGraphicsState(), rt(e3, t3, this.element), [4, this.renderCore(e3)];
          case 4:
            return n.sent(), e3.withinClipPath || e3.pdf.restoreGraphicsState(), r && e3.pdf.restoreGraphicsState(), [2];
        }
      });
    });
  }, e2;
}(q);
var st = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2;
}(at);
var ot = function(t2) {
  function e2(e3, r, i) {
    var n = t2.call(this, r, i) || this;
    return n.cachedPath = null, n.hasMarkers = e3, n;
  }
  return u(e2, t2), e2.prototype.renderCore = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3;
      return c(this, function(r) {
        switch (r.label) {
          case 0:
            return null === (e3 = this.getCachedPath(t3)) || 0 === e3.segments.length ? [2] : (t3.withinClipPath ? e3.transform(t3.transform) : t3.pdf.setCurrentTransformationMatrix(t3.transform), e3.draw(t3), [4, this.fillOrStroke(t3)]);
          case 1:
            return r.sent(), this.hasMarkers ? [4, this.drawMarkers(t3, e3)] : [3, 3];
          case 2:
            r.sent(), r.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, e2.prototype.getCachedPath = function(t3) {
    return this.cachedPath || (this.cachedPath = this.getPath(t3));
  }, e2.prototype.drawMarkers = function(t3, e3) {
    return f(this, void 0, void 0, function() {
      return c(this, function(r) {
        switch (r.label) {
          case 0:
            return [4, this.getMarkers(e3, t3).draw(t3.clone({ transform: t3.pdf.unitMatrix }))];
          case 1:
            return r.sent(), [2];
        }
      });
    });
  }, e2.prototype.fillOrStroke = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i, n, a;
      return c(this, function(s2) {
        switch (s2.label) {
          case 0:
            return t3.withinClipPath ? [2] : (e3 = t3.attributeState.fill, r = t3.attributeState.stroke && 0 !== t3.attributeState.strokeWidth, e3 ? [4, e3.getFillData(this, t3)] : [3, 2]);
          case 1:
            return n = s2.sent(), [3, 3];
          case 2:
            n = void 0, s2.label = 3;
          case 3:
            return i = n, a = "evenodd" === E(this.element, t3.styleSheets, "fill-rule"), e3 && r || t3.withinUse ? a ? t3.pdf.fillStrokeEvenOdd(i) : t3.pdf.fillStroke(i) : e3 ? a ? t3.pdf.fillEvenOdd(i) : t3.pdf.fill(i) : r ? t3.pdf.stroke() : t3.pdf.discardPath(), [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    var e3 = this.getCachedPath(t3);
    if (!e3)
      return [0, 0, 0, 0];
    for (var r = Number.POSITIVE_INFINITY, i = Number.POSITIVE_INFINITY, n = Number.NEGATIVE_INFINITY, a = Number.NEGATIVE_INFINITY, s2 = 0, o = 0, l2 = 0; l2 < e3.segments.length; l2++) {
      var u2 = e3.segments[l2];
      (u2 instanceof A || u2 instanceof P || u2 instanceof B) && (s2 = u2.x, o = u2.y), u2 instanceof B ? (r = Math.min(r, s2, u2.x1, u2.x2, u2.x), n = Math.max(n, s2, u2.x1, u2.x2, u2.x), i = Math.min(i, o, u2.y1, u2.y2, u2.y), a = Math.max(a, o, u2.y1, u2.y2, u2.y)) : (r = Math.min(r, s2), n = Math.max(n, s2), i = Math.min(i, o), a = Math.max(a, o));
    }
    return [r, i, n - r, a - i];
  }, e2.prototype.getMarkers = function(t3, e3) {
    var r = E(this.element, e3.styleSheets, "marker-start"), i = E(this.element, e3.styleSheets, "marker-mid"), n = E(this.element, e3.styleSheets, "marker-end"), a = new H();
    if (r || i || n) {
      n && (n = lt(n)), r && (r = lt(r)), i && (i = lt(i));
      for (var s2 = t3.segments, o = [1, 0], l2 = void 0, u2 = false, h2 = [1, 0], f2 = false, c2 = function(t4) {
        var e4 = s2[t4], c3 = r && (1 === t4 || !(s2[t4] instanceof A) && s2[t4 - 1] instanceof A);
        c3 && s2.forEach(function(e5, r2) {
          if (!f2 && e5 instanceof N && r2 > t4) {
            var i2 = s2[r2 - 1];
            f2 = (i2 instanceof A || i2 instanceof P || i2 instanceof B) && i2;
          }
        });
        var p3 = n && (t4 === s2.length - 1 || !(s2[t4] instanceof A) && s2[t4 + 1] instanceof A), d2 = i && t4 > 0 && !(1 === t4 && s2[t4 - 1] instanceof A), m2 = s2[t4 - 1] || null;
        if (m2 instanceof A || m2 instanceof P || m2 instanceof B) {
          if (e4 instanceof B)
            c3 && a.addMarker(new V(r, [m2.x, m2.y], S(f2 ? [f2.x, f2.y] : [m2.x, m2.y], [e4.x1, e4.y1]))), p3 && a.addMarker(new V(n, [e4.x, e4.y], S([e4.x2, e4.y2], [e4.x, e4.y]))), d2 && (l2 = M([m2.x, m2.y], [e4.x1, e4.y1]), l2 = m2 instanceof A ? l2 : k(T(o, l2)), a.addMarker(new V(i, [m2.x, m2.y], Math.atan2(l2[1], l2[0])))), o = M([e4.x2, e4.y2], [e4.x, e4.y]);
          else if (e4 instanceof A || e4 instanceof P) {
            if (l2 = M([m2.x, m2.y], [e4.x, e4.y]), c3) {
              var g2 = f2 ? M([f2.x, f2.y], [e4.x, e4.y]) : l2;
              a.addMarker(new V(r, [m2.x, m2.y], Math.atan2(g2[1], g2[0])));
            }
            if (p3 && a.addMarker(new V(n, [e4.x, e4.y], Math.atan2(l2[1], l2[0]))), d2) {
              g2 = e4 instanceof A ? o : m2 instanceof A ? l2 : k(T(o, l2));
              a.addMarker(new V(i, [m2.x, m2.y], Math.atan2(g2[1], g2[0])));
            }
            o = l2;
          } else if (e4 instanceof N) {
            if (l2 = M([m2.x, m2.y], [u2.x, u2.y]), d2) {
              g2 = m2 instanceof A ? l2 : k(T(o, l2));
              a.addMarker(new V(i, [m2.x, m2.y], Math.atan2(g2[1], g2[0])));
            }
            if (p3) {
              g2 = k(T(l2, h2));
              a.addMarker(new V(n, [u2.x, u2.y], Math.atan2(g2[1], g2[0])));
            }
            o = l2;
          }
        } else {
          u2 = e4 instanceof A && e4;
          var y2 = s2[t4 + 1];
          (y2 instanceof A || y2 instanceof P || y2 instanceof B) && (h2 = M([u2.x, u2.y], [y2.x, y2.y]));
        }
      }, p2 = 0; p2 < s2.length; p2++)
        c2(p2);
    }
    return a;
  }, e2;
}(st);
function lt(t2) {
  var e2 = g.exec(t2);
  return e2 && e2[1] || void 0;
}
var ut = function(t2) {
  function e2(e3, r) {
    return t2.call(this, true, e3, r) || this;
  }
  return u(e2, t2), e2.prototype.getPath = function(t3) {
    if (t3.withinClipPath || null === t3.attributeState.stroke)
      return null;
    var e3 = parseFloat(this.element.getAttribute("x1") || "0"), r = parseFloat(this.element.getAttribute("y1") || "0"), i = parseFloat(this.element.getAttribute("x2") || "0"), n = parseFloat(this.element.getAttribute("y2") || "0");
    return e3 || i || r || n ? new F().moveTo(e3, r).lineTo(i, n) : null;
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2.prototype.fillOrStroke = function(e3) {
    return f(this, void 0, void 0, function() {
      return c(this, function(r) {
        switch (r.label) {
          case 0:
            return e3.attributeState.fill = null, [4, t2.prototype.fillOrStroke.call(this, e3)];
          case 1:
            return r.sent(), [2];
        }
      });
    });
  }, e2;
}(ot);
var ht = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.apply = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i, n;
      return c(this, function(a) {
        switch (a.label) {
          case 0:
            return this.isVisible("hidden" !== t3.attributeState.visibility, t3) ? ((e3 = t3.clone()).transform = e3.pdf.unitMatrix, et(e3, this), this.element.hasAttribute("clip-path") && "none" !== E(this.element, e3.styleSheets, "clip-path") ? (r = it(this, e3)) && r.isVisible(true, e3) ? [4, nt(this, r, e3)] : [3, 2] : [3, 3]) : [2];
          case 1:
            return a.sent(), [3, 3];
          case 2:
            return [2];
          case 3:
            rt(e3, t3, this.element), i = 0, n = this.children, a.label = 4;
          case 4:
            return i < n.length ? [4, n[i].render(e3)] : [3, 7];
          case 5:
            a.sent(), a.label = 6;
          case 6:
            return i++, [3, 4];
          case 7:
            return [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return U(t3, this);
  }, e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    var e3 = parseFloat(E(this.element, t3.styleSheets, "x") || "0"), r = parseFloat(E(this.element, t3.styleSheets, "y") || "0"), i = this.element.getAttribute("viewBox");
    if (i) {
      var n = W(i), a = parseFloat(E(this.element, t3.styleSheets, "width") || E(this.element.ownerSVGElement, t3.styleSheets, "width") || i[2]), s2 = parseFloat(E(this.element, t3.styleSheets, "height") || E(this.element.ownerSVGElement, t3.styleSheets, "height") || i[3]);
      return Y(this.element, n, e3, r, a, s2, t3);
    }
    return t3.pdf.Matrix(1, 0, 0, 1, e3, r);
  }, e2;
}(_);
var ft = function(t2, e2) {
  this.width = t2, this.height = e2;
};
var ct = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.renderCore = function(t3) {
    return f(this, void 0, void 0, function() {
      var r, i, n, a, s2, o, l2, u2, h2, f2, p2, d2, m2;
      return c(this, function(c2) {
        switch (c2.label) {
          case 0:
            return r = parseFloat, (i = this.element.getAttribute("href") || this.element.getAttribute("xlink:href")) ? (n = i.substring(1), a = t3.refsHandler.get(n), s2 = O2(a.element, "symbol,svg") && a.element.hasAttribute("viewBox"), o = r(E(this.element, t3.styleSheets, "x") || "0"), l2 = r(E(this.element, t3.styleSheets, "y") || "0"), u2 = void 0, h2 = void 0, s2 ? (u2 = r(E(this.element, t3.styleSheets, "width") || E(a.element, t3.styleSheets, "width") || "0"), h2 = r(E(this.element, t3.styleSheets, "height") || E(a.element, t3.styleSheets, "height") || "0"), o += r(E(a.element, t3.styleSheets, "x") || "0"), l2 += r(E(a.element, t3.styleSheets, "y") || "0"), p2 = W(a.element.getAttribute("viewBox")), f2 = Y(a.element, p2, o, l2, u2, h2, t3)) : f2 = t3.pdf.Matrix(1, 0, 0, 1, o, l2), d2 = new v(t3.pdf, { refsHandler: t3.refsHandler, styleSheets: t3.styleSheets, withinUse: true, viewport: s2 ? new ft(u2, h2) : t3.viewport, svg2pdfParameters: t3.svg2pdfParameters }), m2 = t3.attributeState.color, [4, t3.refsHandler.getRendered(n, m2, function(t4) {
              return e2.renderReferencedNode(t4, n, m2, d2);
            })]) : [2];
          case 1:
            return c2.sent(), t3.pdf.saveGraphicsState(), t3.pdf.setCurrentTransformationMatrix(t3.transform), s2 && "visible" !== E(a.element, t3.styleSheets, "overflow") && (t3.pdf.rect(o, l2, u2, h2), t3.pdf.clip().discardPath()), t3.pdf.doFormObject(x.generateKey(n, m2), f2), t3.pdf.restoreGraphicsState(), [2];
        }
      });
    });
  }, e2.renderReferencedNode = function(t3, e3, r, i) {
    return f(this, void 0, void 0, function() {
      var n;
      return c(this, function(a) {
        switch (a.label) {
          case 0:
            return n = [(n = t3.getBoundingBox(i))[0] - 0.5 * n[2], n[1] - 0.5 * n[3], 2 * n[2], 2 * n[3]], i.attributeState.color = r, i.pdf.beginFormObject(n[0], n[1], n[2], n[3], i.pdf.unitMatrix), t3 instanceof ht ? [4, t3.apply(i)] : [3, 2];
          case 1:
            return a.sent(), [3, 4];
          case 2:
            return [4, t3.render(i)];
          case 3:
            a.sent(), a.label = 4;
          case 4:
            return i.pdf.endFormObject(x.generateKey(e3, r)), [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return z(this.element, t3);
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2;
}(st);
var pt = function(t2) {
  function e2(e3, r) {
    return t2.call(this, false, e3, r) || this;
  }
  return u(e2, t2), e2.prototype.getPath = function(t3) {
    var e3 = parseFloat(E(this.element, t3.styleSheets, "width") || "0"), r = parseFloat(E(this.element, t3.styleSheets, "height") || "0");
    if (!isFinite(e3) || e3 <= 0 || !isFinite(r) || r <= 0)
      return null;
    var i = E(this.element, t3.styleSheets, "rx"), n = E(this.element, t3.styleSheets, "ry"), a = Math.min(parseFloat(i || n || "0"), 0.5 * e3), s2 = Math.min(parseFloat(n || i || "0"), 0.5 * r), o = parseFloat(E(this.element, t3.styleSheets, "x") || "0"), l2 = parseFloat(E(this.element, t3.styleSheets, "y") || "0"), u2 = 4 / 3 * (Math.SQRT2 - 1);
    return 0 === a && 0 === s2 ? new F().moveTo(o, l2).lineTo(o + e3, l2).lineTo(o + e3, l2 + r).lineTo(o, l2 + r).close() : new F().moveTo(o += a, l2).lineTo(o += e3 - 2 * a, l2).curveTo(o + a * u2, l2, o + a, l2 + (s2 - s2 * u2), o += a, l2 += s2).lineTo(o, l2 += r - 2 * s2).curveTo(o, l2 + s2 * u2, o - a * u2, l2 + s2, o -= a, l2 += s2).lineTo(o += 2 * a - e3, l2).curveTo(o - a * u2, l2, o - a, l2 - s2 * u2, o -= a, l2 -= s2).lineTo(o, l2 += 2 * s2 - r).curveTo(o, l2 - s2 * u2, o + a * u2, l2 - s2, o += a, l2 -= s2).close();
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2;
}(ot);
var dt = function(t2) {
  function e2(e3, r) {
    return t2.call(this, false, e3, r) || this;
  }
  return u(e2, t2), e2.prototype.getPath = function(t3) {
    var e3 = this.getRx(t3), r = this.getRy(t3);
    if (!isFinite(e3) || r <= 0 || !isFinite(r) || r <= 0)
      return null;
    var i = parseFloat(E(this.element, t3.styleSheets, "cx") || "0"), n = parseFloat(E(this.element, t3.styleSheets, "cy") || "0"), a = 4 / 3 * (Math.SQRT2 - 1) * e3, s2 = 4 / 3 * (Math.SQRT2 - 1) * r;
    return new F().moveTo(i + e3, n).curveTo(i + e3, n - s2, i + a, n - r, i, n - r).curveTo(i - a, n - r, i - e3, n - s2, i - e3, n).curveTo(i - e3, n + s2, i - a, n + r, i, n + r).curveTo(i + a, n + r, i + e3, n + s2, i + e3, n);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2;
}(ot);
var mt = function(t2) {
  function e2(e3, r) {
    return t2.call(this, e3, r) || this;
  }
  return u(e2, t2), e2.prototype.getRx = function(t3) {
    return parseFloat(E(this.element, t3.styleSheets, "rx") || "0");
  }, e2.prototype.getRy = function(t3) {
    return parseFloat(E(this.element, t3.styleSheets, "ry") || "0");
  }, e2;
}(dt);
function gt(t2) {
  var e2 = "invisible";
  return t2.fill && t2.stroke ? e2 = "fillThenStroke" : t2.fill ? e2 = "fill" : t2.stroke && (e2 = "stroke"), e2;
}
function yt(t2) {
  return t2.replace(/[\n\r]/g, "");
}
function bt(t2) {
  return t2.replace(/[\t]/g, " ");
}
function vt(t2) {
  return t2.replace(/ +/g, " ");
}
function xt(t2, e2, r) {
  switch (E(t2, r.styleSheets, "text-transform")) {
    case "uppercase":
      return e2.toUpperCase();
    case "lowercase":
      return e2.toLowerCase();
    default:
      return e2;
  }
}
var St = function() {
  function t2(t3, e2, r, i) {
    this.textNode = t3, this.texts = [], this.textNodes = [], this.contexts = [], this.textAnchor = e2, this.originX = r, this.originY = i, this.textMeasures = [];
  }
  return t2.prototype.setX = function(t3) {
    this.originX = t3;
  }, t2.prototype.setY = function(t3) {
    this.originY = t3;
  }, t2.prototype.add = function(t3, e2, r) {
    this.texts.push(e2), this.textNodes.push(t3), this.contexts.push(r);
  }, t2.prototype.rightTrimText = function() {
    for (var t3 = this.texts.length - 1; t3 >= 0; t3--)
      if ("default" === this.contexts[t3].attributeState.xmlSpace && (this.texts[t3] = this.texts[t3].replace(/\s+$/, "")), this.texts[t3].match(/[^\s]/))
        return false;
    return true;
  }, t2.prototype.measureText = function(t3) {
    for (var e2 = 0; e2 < this.texts.length; e2++)
      this.textMeasures.push({ width: t3.textMeasure.measureTextWidth(this.texts[e2], this.contexts[e2].attributeState), length: this.texts[e2].length });
  }, t2.prototype.put = function(t3, e2) {
    var r, i, n, a, s2 = [], o = [], l2 = [], u2 = this.originX, h2 = this.originY, f2 = u2, c2 = u2;
    for (r = 0; r < this.textNodes.length; r++) {
      i = this.textNodes[r], n = this.contexts[r], a = this.textMeasures[r] || { width: t3.textMeasure.measureTextWidth(this.texts[r], this.contexts[r].attributeState), length: this.texts[r].length };
      var p2 = u2, d2 = h2;
      if ("#text" !== i.nodeName && !s2.includes(i)) {
        s2.push(i);
        var m2 = i.getAttribute("dx");
        null !== m2 && (p2 += R(m2, n.attributeState.fontSize));
        var g2 = i.getAttribute("dy");
        null !== g2 && (d2 += R(g2, n.attributeState.fontSize));
      }
      o[r] = p2, l2[r] = d2, u2 = p2 + a.width + a.length * e2, h2 = d2, f2 = Math.min(f2, p2), c2 = Math.max(c2, u2);
    }
    var y2 = 0;
    switch (this.textAnchor) {
      case "start":
        y2 = 0;
        break;
      case "middle":
        y2 = (c2 - f2) / 2;
        break;
      case "end":
        y2 = c2 - f2;
    }
    for (r = 0; r < this.textNodes.length; r++)
      if (i = this.textNodes[r], n = this.contexts[r], "#text" === i.nodeName || "hidden" !== n.attributeState.visibility) {
        t3.pdf.saveGraphicsState(), rt(n, t3, i);
        var b2 = n.attributeState.alignmentBaseline, v2 = gt(n.attributeState);
        t3.pdf.text(this.texts[r], o[r] - y2, l2[r], { baseline: D(b2), angle: t3.transform, renderingMode: "fill" === v2 ? void 0 : v2, charSpace: 0 === e2 ? void 0 : e2 }), t3.pdf.restoreGraphicsState();
      }
    return [u2, h2];
  }, t2;
}();
var wt = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.processTSpans = function(t3, e3, r, i, n, a) {
    for (var s2 = r.pdf.getFontSize(), o = r.attributeState.xmlSpace, l2 = true, u2 = false, h2 = 0; h2 < e3.childNodes.length; h2++) {
      var f2 = e3.childNodes[h2];
      if (f2.textContent) {
        var c2 = f2.textContent;
        if ("#text" === f2.nodeName) {
          var p2 = yt(c2);
          p2 = bt(p2), "default" === o && (p2 = vt(p2), l2 && p2.match(/^\s/) && (u2 = true), p2.match(/[^\s]/) && (l2 = false), a.prevText.match(/\s$/) && (p2 = p2.replace(/^\s+/, "")));
          var d2 = xt(e3, p2, r);
          n.add(e3, d2, r), a.prevText = c2, a.prevContext = r;
        } else if (O2(f2, "title"))
          ;
        else if (O2(f2, "tspan")) {
          var m2 = f2, g2 = m2.getAttribute("x");
          if (null !== g2) {
            var y2 = R(g2, s2);
            n = new St(this, E(m2, r.styleSheets, "text-anchor") || r.attributeState.textAnchor, y2, 0), i.push({ type: "y", chunk: n });
          }
          var b2 = m2.getAttribute("y");
          if (null !== b2) {
            var v2 = R(b2, s2);
            n = new St(this, E(m2, r.styleSheets, "text-anchor") || r.attributeState.textAnchor, 0, v2), i.push({ type: "x", chunk: n });
          }
          var x2 = r.clone();
          et(x2, t3, m2), this.processTSpans(t3, m2, x2, i, n, a);
        }
      }
    }
    return u2;
  }, e2.prototype.renderCore = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i, n, a, s2, o, l2, u2, h2, f2, p2, d2, m2, g2, y2, b2, v2, x2, S2, w2, k2, M2;
      return c(this, function(c2) {
        if (t3.pdf.saveGraphicsState(), e3 = 0, r = 0, i = 1, n = t3.pdf.getFontSize(), a = R(this.element.getAttribute("x"), n), s2 = R(this.element.getAttribute("y"), n), o = R(this.element.getAttribute("dx"), n), l2 = R(this.element.getAttribute("dy"), n), u2 = parseFloat(this.element.getAttribute("textLength") || "0"), h2 = t3.attributeState.visibility, 0 === this.element.childElementCount)
          f2 = this.element.textContent || "", p2 = function(t4, e4) {
            return t4 = bt(t4 = yt(t4)), "default" === e4.xmlSpace && (t4 = vt(t4 = t4.trim())), t4;
          }(f2, t3.attributeState), d2 = xt(this.element, p2, t3), e3 = t3.textMeasure.getTextOffset(d2, t3.attributeState), u2 > 0 && (m2 = t3.textMeasure.measureTextWidth(d2, t3.attributeState), "default" === t3.attributeState.xmlSpace && f2.match(/^\s/) && (i = 0), r = (u2 - m2) / (d2.length - i) || 0), "visible" === h2 && (g2 = t3.attributeState.alignmentBaseline, y2 = gt(t3.attributeState), t3.pdf.text(d2, a + o - e3, s2 + l2, { baseline: D(g2), angle: t3.transform, renderingMode: "fill" === y2 ? void 0 : y2, charSpace: 0 === r ? void 0 : r }));
        else {
          for (b2 = [], v2 = new St(this, t3.attributeState.textAnchor, a + o, s2 + l2), b2.push({ type: "", chunk: v2 }), x2 = this.processTSpans(this, this.element, t3, b2, v2, { prevText: " ", prevContext: t3 }), i = x2 ? 0 : 1, S2 = true, w2 = b2.length - 1; w2 >= 0; w2--)
            S2 && (S2 = b2[w2].chunk.rightTrimText());
          u2 > 0 && (k2 = 0, M2 = 0, b2.forEach(function(e4) {
            var r2 = e4.chunk;
            r2.measureText(t3), r2.textMeasures.forEach(function(t4) {
              var e5 = t4.width, r3 = t4.length;
              k2 += e5, M2 += r3;
            });
          }), r = (u2 - k2) / (M2 - i)), b2.reduce(function(e4, i2) {
            var n2 = i2.type, a2 = i2.chunk;
            return "x" === n2 ? a2.setX(e4[0]) : "y" === n2 && a2.setY(e4[1]), a2.put(t3, r);
          }, [0, 0]);
        }
        return t3.pdf.restoreGraphicsState(), [2];
      });
    });
  }, e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return z(this.element, t3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2;
}(st);
var kt = function(t2) {
  function e2(e3, r) {
    return t2.call(this, true, e3, r) || this;
  }
  return u(e2, t2), e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2.prototype.getPath = function(t3) {
    var e3, r, i = new import_svgpath.default(E(this.element, t3.styleSheets, "d") || "").unshort().unarc().abs(), n = new F();
    return i.iterate(function(t4) {
      var i2 = t4[0];
      switch (i2) {
        case "M":
          n.moveTo(t4[1], t4[2]);
          break;
        case "L":
          n.lineTo(t4[1], t4[2]);
          break;
        case "H":
          n.lineTo(t4[1], r);
          break;
        case "V":
          n.lineTo(e3, t4[1]);
          break;
        case "C":
          n.curveTo(t4[1], t4[2], t4[3], t4[4], t4[5], t4[6]);
          break;
        case "Q":
          var a = w([e3, r], [t4[1], t4[2]]), s2 = w([t4[3], t4[4]], [t4[1], t4[2]]);
          n.curveTo(a[0], a[1], s2[0], s2[1], t4[3], t4[4]);
          break;
        case "Z":
          n.close();
      }
      switch (i2) {
        case "M":
        case "L":
          e3 = t4[1], r = t4[2];
          break;
        case "H":
          e3 = t4[1];
          break;
        case "V":
          r = t4[1];
          break;
        case "C":
          e3 = t4[5], r = t4[6];
          break;
        case "Q":
          e3 = t4[3], r = t4[4];
      }
    }), n;
  }, e2;
}(ot);
var Mt = /^\s*data:(([^/,;]+\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,(.*\s*)$/i;
var Tt = function(t2) {
  function e2(r, i) {
    var n = t2.call(this, r, i) || this;
    return n.imageLoadingPromise = null, n.imageUrl = n.element.getAttribute("xlink:href") || n.element.getAttribute("href"), n.imageUrl && (n.imageLoadingPromise = e2.fetchImageData(n.imageUrl)), n;
  }
  return u(e2, t2), e2.prototype.renderCore = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i, n, a, s2, o, l2, u2, h2, f2, p2;
      return c(this, function(c2) {
        switch (c2.label) {
          case 0:
            return this.imageLoadingPromise ? (t3.pdf.setCurrentTransformationMatrix(t3.transform), e3 = parseFloat(E(this.element, t3.styleSheets, "width") || "0"), r = parseFloat(E(this.element, t3.styleSheets, "height") || "0"), i = parseFloat(E(this.element, t3.styleSheets, "x") || "0"), n = parseFloat(E(this.element, t3.styleSheets, "y") || "0"), !isFinite(e3) || e3 <= 0 || !isFinite(r) || r <= 0 ? [2] : [4, this.imageLoadingPromise]) : [2];
          case 1:
            return a = c2.sent(), s2 = a.data, 0 !== (o = a.format).indexOf("svg") ? [3, 3] : (l2 = new DOMParser(), u2 = l2.parseFromString(s2, "image/svg+xml").firstElementChild, (!(h2 = this.element.getAttribute("preserveAspectRatio")) || h2.indexOf("defer") < 0 || !u2.getAttribute("preserveAspectRatio")) && u2.setAttribute("preserveAspectRatio", h2 || ""), u2.setAttribute("x", String(i)), u2.setAttribute("y", String(n)), u2.setAttribute("width", String(e3)), u2.setAttribute("height", String(r)), [4, Ht(u2, f2 = {}).render(new v(t3.pdf, { refsHandler: new x(f2), styleSheets: t3.styleSheets, viewport: new ft(e3, r), svg2pdfParameters: t3.svg2pdfParameters }))]);
          case 2:
            return c2.sent(), [2];
          case 3:
            p2 = "data:image/" + o + ";base64," + btoa(s2);
            try {
              t3.pdf.addImage(p2, "", i, n, e3, r);
            } catch (t4) {
              "object" == typeof console && console.warn && console.warn("Could not load image " + this.imageUrl + ".\n" + t4);
            }
            c2.label = 4;
          case 4:
            return [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return z(this.element, t3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2.fetchImageData = function(t3) {
    return f(this, void 0, void 0, function() {
      var r, i, n, a, s2;
      return c(this, function(o) {
        switch (o.label) {
          case 0:
            if (!(n = t3.match(Mt)))
              return [3, 1];
            if (a = n[2], "image" !== (s2 = a.split("/"))[0])
              throw new Error("Unsupported image URL: " + t3);
            return i = s2[1], r = n[5], r = "base64" === n[4] ? atob(r) : decodeURIComponent(r), [3, 3];
          case 1:
            return [4, e2.fetchImage(t3)];
          case 2:
            r = o.sent(), i = t3.substring(t3.lastIndexOf(".") + 1), o.label = 3;
          case 3:
            return [2, { data: r, format: i }];
        }
      });
    });
  }, e2.fetchImage = function(t3) {
    return new Promise(function(e3, r) {
      var i = new XMLHttpRequest();
      i.open("GET", t3, true), i.responseType = "arraybuffer", i.onload = function() {
        if (200 !== i.status)
          throw new Error("Error " + i.status + ": Failed to load image '" + t3 + "'");
        for (var r2 = new Uint8Array(i.response), n = "", a = 0; a < r2.length; a++)
          n += String.fromCharCode(r2[a]);
        e3(n);
      }, i.onerror = r, i.onabort = r, i.send(null);
    });
  }, e2.getMimeType = function(t3) {
    switch (t3 = t3.toLowerCase()) {
      case "jpg":
      case "jpeg":
        return "image/jpeg";
      default:
        return "image/" + t3;
    }
  }, e2;
}(st);
var Ct = function(t2) {
  function e2(e3, r, i) {
    var n = t2.call(this, true, r, i) || this;
    return n.closed = e3, n;
  }
  return u(e2, t2), e2.prototype.getPath = function(t3) {
    if (!this.element.hasAttribute("points") || "" === this.element.getAttribute("points"))
      return null;
    var r = e2.parsePointsString(this.element.getAttribute("points")), i = new F();
    if (r.length < 1)
      return i;
    i.moveTo(r[0][0], r[0][1]);
    for (var n = 1; n < r.length; n++)
      i.lineTo(r[n][0], r[n][1]);
    return this.closed && i.close(), i;
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.parsePointsString = function(t3) {
    for (var e3 = W(t3), r = [], i = 0; i < e3.length - 1; i += 2) {
      var n = e3[i], a = e3[i + 1];
      r.push([n, a]);
    }
    return r;
  }, e2;
}(ot);
var Ft = function(t2) {
  function e2(e3, r) {
    return t2.call(this, true, e3, r) || this;
  }
  return u(e2, t2), e2;
}(Ct);
var At = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.render = function(t3) {
    return Promise.resolve();
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return [0, 0, 0, 0];
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2.prototype.isVisible = function(t3, e3) {
    return L(this, t3, e3);
  }, e2;
}(q);
var Pt = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.apply = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i, n;
      return c(this, function(a) {
        switch (a.label) {
          case 0:
            e3 = this.computeNodeTransform(t3), r = this.getBoundingBox(t3), t3.pdf.beginFormObject(r[0], r[1], r[2], r[3], e3), i = 0, n = this.children, a.label = 1;
          case 1:
            return i < n.length ? [4, n[i].render(new v(t3.pdf, { refsHandler: t3.refsHandler, styleSheets: t3.styleSheets, viewport: t3.viewport, svg2pdfParameters: t3.svg2pdfParameters }))] : [3, 4];
          case 2:
            a.sent(), a.label = 3;
          case 3:
            return i++, [3, 1];
          case 4:
            return t3.pdf.endFormObject(this.element.getAttribute("id")), [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    var e3, r = this.element.getAttribute("viewBox");
    return r && (e3 = W(r)), [e3 && e3[0] || 0, e3 && e3[1] || 0, e3 && e3[2] || parseFloat(this.element.getAttribute("marker-width") || "0"), e3 && e3[3] || parseFloat(this.element.getAttribute("marker-height") || "0")];
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    var e3, r = parseFloat(this.element.getAttribute("refX") || "0"), i = parseFloat(this.element.getAttribute("refY") || "0"), n = this.element.getAttribute("viewBox");
    if (n) {
      var a = W(n);
      e3 = Y(this.element, a, 0, 0, parseFloat(this.element.getAttribute("markerWidth") || "3"), parseFloat(this.element.getAttribute("markerHeight") || "3"), t3, true), e3 = t3.pdf.matrixMult(t3.pdf.Matrix(1, 0, 0, 1, -r, -i), e3);
    } else
      e3 = t3.pdf.Matrix(1, 0, 0, 1, -r, -i);
    return e3;
  }, e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2;
}(_);
var Bt = function(t2) {
  function e2(e3, r) {
    return t2.call(this, e3, r) || this;
  }
  return u(e2, t2), e2.prototype.getR = function(t3) {
    var e3;
    return null !== (e3 = this.r) && void 0 !== e3 ? e3 : this.r = parseFloat(E(this.element, t3.styleSheets, "r") || "0");
  }, e2.prototype.getRx = function(t3) {
    return this.getR(t3);
  }, e2.prototype.getRy = function(t3) {
    return this.getR(t3);
  }, e2;
}(dt);
var Nt = function(t2) {
  function e2(e3, r) {
    return t2.call(this, false, e3, r) || this;
  }
  return u(e2, t2), e2;
}(Ct);
var Ot = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.renderCore = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r;
      return c(this, function(i) {
        switch (i.label) {
          case 0:
            e3 = 0, r = this.children, i.label = 1;
          case 1:
            return e3 < r.length ? [4, r[e3].render(t3)] : [3, 4];
          case 2:
            i.sent(), i.label = 3;
          case 3:
            return e3++, [3, 1];
          case 4:
            return [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return U(t3, this);
  }, e2;
}(at);
var Et = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2.prototype.render = function(e3) {
    return f(this, void 0, void 0, function() {
      var r, i, n, a, s2;
      return c(this, function(o) {
        switch (o.label) {
          case 0:
            return this.isVisible("hidden" !== e3.attributeState.visibility, e3) ? (r = this.getX(e3), i = this.getY(e3), n = this.getWidth(e3), a = this.getHeight(e3), e3.pdf.saveGraphicsState(), s2 = e3.transform, this.element.hasAttribute("transform") && (s2 = e3.pdf.matrixMult(X(this.element.getAttribute("transform"), e3), s2)), e3.pdf.setCurrentTransformationMatrix(s2), e3.withinUse || "visible" === E(this.element, e3.styleSheets, "overflow") || e3.pdf.rect(r, i, n, a).clip().discardPath(), [4, t2.prototype.render.call(this, e3.clone({ transform: e3.pdf.unitMatrix, viewport: e3.withinUse ? e3.viewport : new ft(n, a) }))]) : [2];
          case 1:
            return o.sent(), e3.pdf.restoreGraphicsState(), [2];
        }
      });
    });
  }, e2.prototype.computeNodeTransform = function(t3) {
    return this.computeNodeTransformCore(t3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    if (t3.withinUse)
      return t3.pdf.unitMatrix;
    var e3, r = this.getX(t3), i = this.getY(t3), n = this.getViewBox();
    if (n) {
      var a = this.getWidth(t3), s2 = this.getHeight(t3);
      e3 = Y(this.element, n, r, i, a, s2, t3);
    } else
      e3 = t3.pdf.Matrix(1, 0, 0, 1, r, i);
    return e3;
  }, e2.prototype.getWidth = function(t3) {
    if (void 0 !== this.width)
      return this.width;
    var e3, r, i = t3.svg2pdfParameters;
    if (this.isOutermostSvg(t3))
      if (null != i.width)
        e3 = i.width;
      else if (r = E(this.element, t3.styleSheets, "width"))
        e3 = parseFloat(r);
      else {
        var n = this.getViewBox();
        if (n && (null != i.height || E(this.element, t3.styleSheets, "height"))) {
          var a = n[2] / n[3];
          e3 = this.getHeight(t3) * a;
        } else
          e3 = Math.min(300, t3.viewport.width, 2 * t3.viewport.height);
      }
    else
      e3 = (r = E(this.element, t3.styleSheets, "width")) ? parseFloat(r) : t3.viewport.width;
    return this.width = e3;
  }, e2.prototype.getHeight = function(t3) {
    if (void 0 !== this.height)
      return this.height;
    var e3, r, i = t3.svg2pdfParameters;
    if (this.isOutermostSvg(t3))
      if (null != i.height)
        e3 = i.height;
      else if (r = E(this.element, t3.styleSheets, "height"))
        e3 = parseFloat(r);
      else {
        var n = this.getViewBox();
        if (n) {
          var a = n[2] / n[3];
          e3 = this.getWidth(t3) / a;
        } else
          e3 = Math.min(150, t3.viewport.width / 2, t3.viewport.height);
      }
    else
      e3 = (r = E(this.element, t3.styleSheets, "height")) ? parseFloat(r) : t3.viewport.height;
    return this.height = e3;
  }, e2.prototype.getX = function(t3) {
    if (void 0 !== this.x)
      return this.x;
    if (this.isOutermostSvg(t3))
      return this.x = 0;
    var e3 = E(this.element, t3.styleSheets, "x");
    return this.x = e3 ? parseFloat(e3) : 0;
  }, e2.prototype.getY = function(t3) {
    if (void 0 !== this.y)
      return this.y;
    if (this.isOutermostSvg(t3))
      return this.y = 0;
    var e3 = E(this.element, t3.styleSheets, "y");
    return this.y = e3 ? parseFloat(e3) : 0;
  }, e2.prototype.getViewBox = function() {
    if (void 0 !== this.viewBox)
      return this.viewBox;
    var t3 = this.element.getAttribute("viewBox");
    return this.viewBox = t3 ? W(t3) : void 0;
  }, e2.prototype.isOutermostSvg = function(t3) {
    return t3.svg2pdfParameters.element === this.element;
  }, e2;
}(Ot);
var Lt = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2.prototype.computeNodeTransformCore = function(t3) {
    return t3.pdf.unitMatrix;
  }, e2;
}(Ot);
var It = function(t2) {
  function e2() {
    return null !== t2 && t2.apply(this, arguments) || this;
  }
  return u(e2, t2), e2.prototype.apply = function(t3) {
    return f(this, void 0, void 0, function() {
      var e3, r, i;
      return c(this, function(n) {
        switch (n.label) {
          case 0:
            if (!this.isVisible(true, t3))
              return [2];
            e3 = t3.pdf.matrixMult(this.computeNodeTransform(t3), t3.transform), t3.pdf.setCurrentTransformationMatrix(e3), r = 0, i = this.children, n.label = 1;
          case 1:
            return r < i.length ? [4, i[r].render(new v(t3.pdf, { refsHandler: t3.refsHandler, styleSheets: t3.styleSheets, viewport: t3.viewport, withinClipPath: true, svg2pdfParameters: t3.svg2pdfParameters }))] : [3, 4];
          case 2:
            n.sent(), n.label = 3;
          case 3:
            return r++, [3, 1];
          case 4:
            return t3.pdf.clip().discardPath(), t3.pdf.setCurrentTransformationMatrix(e3.inversed()), [2];
        }
      });
    });
  }, e2.prototype.getBoundingBoxCore = function(t3) {
    return U(t3, this);
  }, e2.prototype.isVisible = function(t3, e3) {
    return I2(this, t3, e3);
  }, e2;
}(_);
function Ht(e2, r) {
  var i, n = [];
  switch (function(t2, e3) {
    for (var r2 = [], i2 = 0; i2 < t2.childNodes.length; i2++) {
      var n2 = t2.childNodes[i2];
      "#" !== n2.nodeName.charAt(0) && r2.push(n2);
    }
    for (i2 = 0; i2 < r2.length; i2++)
      e3(i2, r2[i2]);
  }(e2, function(t2, e3) {
    return n.push(Ht(e3, r));
  }), e2.tagName.toLowerCase()) {
    case "a":
    case "g":
      i = new Lt(e2, n);
      break;
    case "circle":
      i = new Bt(e2, n);
      break;
    case "clippath":
      i = new It(e2, n);
      break;
    case "ellipse":
      i = new mt(e2, n);
      break;
    case "lineargradient":
      i = new Q(e2, n);
      break;
    case "image":
      i = new Tt(e2, n);
      break;
    case "line":
      i = new ut(e2, n);
      break;
    case "marker":
      i = new Pt(e2, n);
      break;
    case "path":
      i = new kt(e2, n);
      break;
    case "pattern":
      i = new Z(e2, n);
      break;
    case "polygon":
      i = new Ft(e2, n);
      break;
    case "polyline":
      i = new Nt(e2, n);
      break;
    case "radialgradient":
      i = new K(e2, n);
      break;
    case "rect":
      i = new pt(e2, n);
      break;
    case "svg":
      i = new Et(e2, n);
      break;
    case "symbol":
      i = new ht(e2, n);
      break;
    case "text":
      i = new wt(e2, n);
      break;
    case "use":
      i = new ct(e2, n);
      break;
    default:
      i = new At(e2, n);
  }
  if (null != r && i.element.hasAttribute("id")) {
    var a = (0, import_cssesc.default)(i.element.id, { isIdentifier: true });
    r[a] = r[a] || i;
  }
  return i.children.forEach(function(t2) {
    return t2.setParent(i);
  }), i;
}
var Vt = function() {
  function t2(t3, e2) {
    this.rootSvg = t3, this.loadExternalSheets = e2, this.styleSheets = [];
  }
  return t2.prototype.load = function() {
    return f(this, void 0, void 0, function() {
      var t3;
      return c(this, function(e2) {
        switch (e2.label) {
          case 0:
            return [4, this.collectStyleSheetTexts()];
          case 1:
            return t3 = e2.sent(), this.parseCssSheets(t3), [2];
        }
      });
    });
  }, t2.prototype.collectStyleSheetTexts = function() {
    return f(this, void 0, void 0, function() {
      var e2, r, i, n, a;
      return c(this, function(s2) {
        switch (s2.label) {
          case 0:
            if (e2 = [], this.loadExternalSheets && this.rootSvg.ownerDocument)
              for (n = 0; n < this.rootSvg.ownerDocument.childNodes.length; n++)
                "xml-stylesheet" === (r = this.rootSvg.ownerDocument.childNodes[n]).nodeName && "string" == typeof r.data && e2.push(t2.loadSheet(r.data.match(/href=["'].*?["']/)[0].split("=")[1].slice(1, -1)));
            for (i = this.rootSvg.querySelectorAll("style,link"), n = 0; n < i.length; n++)
              O2(a = i[n], "style") ? e2.push(a.textContent) : this.loadExternalSheets && O2(a, "link") && "stylesheet" === a.getAttribute("rel") && a.hasAttribute("href") && e2.push(t2.loadSheet(a.getAttribute("href")));
            return [4, Promise.all(e2)];
          case 1:
            return [2, s2.sent().filter(function(t3) {
              return null !== t3;
            })];
        }
      });
    });
  }, t2.prototype.parseCssSheets = function(e2) {
    for (var r = document.implementation.createHTMLDocument(""), i = 0, n = e2; i < n.length; i++) {
      var a = n[i], s2 = r.createElement("style");
      s2.textContent = a, r.body.appendChild(s2);
      var o = s2.sheet;
      if (o instanceof CSSStyleSheet) {
        for (var l2 = o.cssRules.length - 1; l2 >= 0; l2--) {
          var u2 = o.cssRules[l2];
          u2 instanceof CSSStyleRule || o.deleteRule(l2);
          var h2 = u2;
          if (h2.selectorText.indexOf(",") >= 0) {
            o.deleteRule(l2);
            for (var f2 = h2.cssText.substring(h2.selectorText.length), c2 = t2.splitSelectorAtCommas(h2.selectorText), p2 = 0; p2 < c2.length; p2++)
              o.insertRule(c2[p2] + f2, l2 + p2);
          }
        }
        this.styleSheets.push(o);
      }
    }
  }, t2.splitSelectorAtCommas = function(t3) {
    for (var e2, r = /,|["']/g, i = /[^\\]["]/g, n = /[^\\][']/g, a = [], s2 = "initial", o = -1, l2 = i, u2 = 0; u2 < t3.length; )
      switch (s2) {
        case "initial":
          r.lastIndex = u2, (e2 = r.exec(t3)) ? ("," === e2[0] ? (a.push(t3.substring(o + 1, r.lastIndex - 1).trim()), o = r.lastIndex - 1) : (s2 = "withinQuotes", l2 = '"' === e2[0] ? i : n), u2 = r.lastIndex) : (a.push(t3.substring(o + 1).trim()), u2 = t3.length);
          break;
        case "withinQuotes":
          l2.lastIndex = u2, (e2 = l2.exec(t3)) && (u2 = l2.lastIndex, s2 = "initial");
      }
    return a;
  }, t2.loadSheet = function(t3) {
    return new Promise(function(e2, r) {
      var i = new XMLHttpRequest();
      i.open("GET", t3, true), i.responseType = "text", i.onload = function() {
        200 !== i.status && r(new Error("Error " + i.status + ": Failed to load '" + t3 + "'")), e2(i.responseText);
      }, i.onerror = r, i.onabort = r, i.send(null);
    }).catch(function() {
      return null;
    });
  }, t2.prototype.getPropertyValue = function(t3, e2) {
    for (var r = [], i = 0, n = this.styleSheets; i < n.length; i++)
      for (var a = n[i], s2 = 0; s2 < a.cssRules.length; s2++) {
        var l2 = a.cssRules[s2];
        l2.style.getPropertyValue(e2) && t3.matches(l2.selectorText) && r.push(l2);
      }
    if (0 !== r.length) {
      return r.reduce(function(t4, r2) {
        return 1 === (n2 = r2, (a2 = (i2 = t4).style.getPropertyPriority(e2)) !== n2.style.getPropertyPriority(e2) ? "important" === a2 ? 1 : -1 : compare(i2.selectorText, n2.selectorText)) ? t4 : r2;
        var i2, n2, a2;
      }).style.getPropertyValue(e2) || void 0;
    }
  }, t2;
}();
function Rt(t2, e2, r) {
  var i, n, a;
  return void 0 === r && (r = {}), f(this, void 0, void 0, function() {
    var s2, o, l2, u2, f2, p2, d2, m2, g2, y2;
    return c(this, function(c2) {
      switch (c2.label) {
        case 0:
          return s2 = null !== (i = r.x) && void 0 !== i ? i : 0, o = null !== (n = r.y) && void 0 !== n ? n : 0, l2 = null !== (a = r.loadExternalStyleSheets) && void 0 !== a && a, f2 = new x(u2 = {}), [4, (p2 = new Vt(t2, l2)).load()];
        case 1:
          return c2.sent(), d2 = new ft(e2.internal.pageSize.getWidth(), e2.internal.pageSize.getHeight()), m2 = h(h({}, r), { element: t2 }), g2 = new v(e2, { refsHandler: f2, styleSheets: p2, viewport: d2, svg2pdfParameters: m2 }), e2.advancedAPI(), e2.saveGraphicsState(), e2.setCurrentTransformationMatrix(e2.Matrix(1, 0, 0, 1, s2, o)), e2.setLineWidth(g2.attributeState.strokeWidth), y2 = g2.attributeState.fill.color, e2.setFillColor(y2.r, y2.g, y2.b), e2.setFont(g2.attributeState.fontFamily), e2.setFontSize(g2.attributeState.fontSize * e2.internal.scaleFactor), [4, Ht(t2, u2).render(g2)];
        case 2:
          return c2.sent(), e2.restoreGraphicsState(), e2.compatAPI(), g2.textMeasure.cleanupTextMeasuring(), [2, e2];
      }
    });
  });
}
O.API.svg = function(t2, e2) {
  return void 0 === e2 && (e2 = {}), Rt(t2, this, e2);
};
export {
  Rt as svg2pdf
};
/*! Bundled license information:

cssesc/cssesc.js:
  (*! https://mths.be/cssesc v3.0.0 by @mathias *)

svg2pdf.js/dist/svg2pdf.es.min.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
//# sourceMappingURL=svg2pdf__js.js.map
